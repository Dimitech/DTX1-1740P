   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.8.4 20140725 (release) [ARM/embedded-4_8-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I apps -I apps/inc -I apps/src -I apps/src/fonts
  18              	@ -I cmsis_boot -I cmsis_boot/startup -I cmsis_core
  19              	@ -I SAM4S_StdPeriph_Driver -I SAM4S_StdPeriph_Driver/Include
  20              	@ -I SAM4S_StdPeriph_Driver/Include/SAM4S
  21              	@ -I SAM4S_StdPeriph_Driver/Include/SAM4S/component
  22              	@ -I SAM4S_StdPeriph_Driver/Include/SAM4S/instance
  23              	@ -I SAM4S_StdPeriph_Driver/Include/SAM4S/pio
  24              	@ -I SAM4S_StdPeriph_Driver/Source -I SAM4S_StdPeriph_Driver/Source/SAM4S
  25              	@ -I SAM4S_StdPeriph_Driver/Source/SAM4S/include
  26              	@ -I SAM4S_StdPeriph_Driver/Source/SAM4S/source -I user_libs
  27              	@ -I user_libs/inc -I user_libs/src -imultilib armv7e-m
  28              	@ -iprefix d:\armgcc\bin\../lib/gcc/arm-none-eabi/4.8.4/
  29              	@ -isysroot d:\armgcc\bin\../arm-none-eabi -MD out/apps/main.d
  30              	@ -MF out/apps/main.o.dep -MP -MQ out/apps/main.o -D__USES_INITFINI__
  31              	@ -D gcc apps/main.c -mcpu=cortex-m4 -mthumb -auxbase-strip out/apps/main.o
  32              	@ -ggdb3 -O0 -Wall -Wpointer-arith -Wswitch -Wnested-externs -std=gnu99
  33              	@ -fomit-frame-pointer -fverbose-asm -funsigned-char
  34              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  35              	@ -fbranch-count-reg -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  36              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse -fgcse-lm
  37              	@ -fgnu-runtime -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  38              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  39              	@ -fkeep-static-consts -fleading-underscore -fmath-errno
  40              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  41              	@ -fpeephole -fprefetch-loop-arrays -freg-struct-return
  42              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  43              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  44              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  45              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  46              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
  47              	@ -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
  48              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  49              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
  50              	@ -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
  51              	@ -ftree-vect-loop-version -funit-at-a-time -fverbose-asm
  52              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  53              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  54              	
  55              		.text
  56              	.Ltext0:
  57              		.cfi_sections	.debug_frame
  58              		.align	2
  59              		.thumb
  60              		.thumb_func
  62              	NVIC_SetPriority:
  63              	.LFB107:
  64              		.file 1 "cmsis_core/core_cm4.h"
   1:cmsis_core/core_cm4.h **** /**************************************************************************//**
   2:cmsis_core/core_cm4.h ****  * @file     core_cm4.h
   3:cmsis_core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:cmsis_core/core_cm4.h ****  * @version  V3.20
   5:cmsis_core/core_cm4.h ****  * @date     25. February 2013
   6:cmsis_core/core_cm4.h ****  *
   7:cmsis_core/core_cm4.h ****  * @note
   8:cmsis_core/core_cm4.h ****  *
   9:cmsis_core/core_cm4.h ****  ******************************************************************************/
  10:cmsis_core/core_cm4.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:cmsis_core/core_cm4.h **** 
  12:cmsis_core/core_cm4.h ****    All rights reserved.
  13:cmsis_core/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:cmsis_core/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:cmsis_core/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:cmsis_core/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:cmsis_core/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:cmsis_core/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:cmsis_core/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:cmsis_core/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:cmsis_core/core_cm4.h ****      to endorse or promote products derived from this software without
  22:cmsis_core/core_cm4.h ****      specific prior written permission.
  23:cmsis_core/core_cm4.h ****    *
  24:cmsis_core/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:cmsis_core/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:cmsis_core/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:cmsis_core/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:cmsis_core/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:cmsis_core/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:cmsis_core/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:cmsis_core/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:cmsis_core/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:cmsis_core/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:cmsis_core/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:cmsis_core/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:cmsis_core/core_cm4.h **** 
  37:cmsis_core/core_cm4.h **** 
  38:cmsis_core/core_cm4.h **** #if defined ( __ICCARM__ )
  39:cmsis_core/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:cmsis_core/core_cm4.h **** #endif
  41:cmsis_core/core_cm4.h **** 
  42:cmsis_core/core_cm4.h **** #ifdef __cplusplus
  43:cmsis_core/core_cm4.h ****  extern "C" {
  44:cmsis_core/core_cm4.h **** #endif
  45:cmsis_core/core_cm4.h **** 
  46:cmsis_core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  47:cmsis_core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  48:cmsis_core/core_cm4.h **** 
  49:cmsis_core/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:cmsis_core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:cmsis_core/core_cm4.h **** 
  52:cmsis_core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:cmsis_core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:cmsis_core/core_cm4.h **** 
  55:cmsis_core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:cmsis_core/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:cmsis_core/core_cm4.h **** 
  58:cmsis_core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:cmsis_core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:cmsis_core/core_cm4.h ****  */
  61:cmsis_core/core_cm4.h **** 
  62:cmsis_core/core_cm4.h **** 
  63:cmsis_core/core_cm4.h **** /*******************************************************************************
  64:cmsis_core/core_cm4.h ****  *                 CMSIS definitions
  65:cmsis_core/core_cm4.h ****  ******************************************************************************/
  66:cmsis_core/core_cm4.h **** /** \ingroup Cortex_M4
  67:cmsis_core/core_cm4.h ****   @{
  68:cmsis_core/core_cm4.h ****  */
  69:cmsis_core/core_cm4.h **** 
  70:cmsis_core/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:cmsis_core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:cmsis_core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:cmsis_core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:cmsis_core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:cmsis_core/core_cm4.h **** 
  76:cmsis_core/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:cmsis_core/core_cm4.h **** 
  78:cmsis_core/core_cm4.h **** 
  79:cmsis_core/core_cm4.h **** #if   defined ( __CC_ARM )
  80:cmsis_core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:cmsis_core/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:cmsis_core/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:cmsis_core/core_cm4.h **** 
  84:cmsis_core/core_cm4.h **** #elif defined ( __ICCARM__ )
  85:cmsis_core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  86:cmsis_core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  87:cmsis_core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:cmsis_core/core_cm4.h **** 
  89:cmsis_core/core_cm4.h **** #elif defined ( __TMS470__ )
  90:cmsis_core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  91:cmsis_core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  92:cmsis_core/core_cm4.h **** 
  93:cmsis_core/core_cm4.h **** #elif defined ( __GNUC__ )
  94:cmsis_core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  95:cmsis_core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  96:cmsis_core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:cmsis_core/core_cm4.h **** 
  98:cmsis_core/core_cm4.h **** #elif defined ( __TASKING__ )
  99:cmsis_core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:cmsis_core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:cmsis_core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:cmsis_core/core_cm4.h **** 
 103:cmsis_core/core_cm4.h **** #endif
 104:cmsis_core/core_cm4.h **** 
 105:cmsis_core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
 106:cmsis_core/core_cm4.h **** */
 107:cmsis_core/core_cm4.h **** #if defined ( __CC_ARM )
 108:cmsis_core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 109:cmsis_core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 110:cmsis_core/core_cm4.h ****       #define __FPU_USED       1
 111:cmsis_core/core_cm4.h ****     #else
 112:cmsis_core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 113:cmsis_core/core_cm4.h ****       #define __FPU_USED       0
 114:cmsis_core/core_cm4.h ****     #endif
 115:cmsis_core/core_cm4.h ****   #else
 116:cmsis_core/core_cm4.h ****     #define __FPU_USED         0
 117:cmsis_core/core_cm4.h ****   #endif
 118:cmsis_core/core_cm4.h **** 
 119:cmsis_core/core_cm4.h **** #elif defined ( __ICCARM__ )
 120:cmsis_core/core_cm4.h ****   #if defined __ARMVFP__
 121:cmsis_core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 122:cmsis_core/core_cm4.h ****       #define __FPU_USED       1
 123:cmsis_core/core_cm4.h ****     #else
 124:cmsis_core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 125:cmsis_core/core_cm4.h ****       #define __FPU_USED       0
 126:cmsis_core/core_cm4.h ****     #endif
 127:cmsis_core/core_cm4.h ****   #else
 128:cmsis_core/core_cm4.h ****     #define __FPU_USED         0
 129:cmsis_core/core_cm4.h ****   #endif
 130:cmsis_core/core_cm4.h **** 
 131:cmsis_core/core_cm4.h **** #elif defined ( __TMS470__ )
 132:cmsis_core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 133:cmsis_core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 134:cmsis_core/core_cm4.h ****       #define __FPU_USED       1
 135:cmsis_core/core_cm4.h ****     #else
 136:cmsis_core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 137:cmsis_core/core_cm4.h ****       #define __FPU_USED       0
 138:cmsis_core/core_cm4.h ****     #endif
 139:cmsis_core/core_cm4.h ****   #else
 140:cmsis_core/core_cm4.h ****     #define __FPU_USED         0
 141:cmsis_core/core_cm4.h ****   #endif
 142:cmsis_core/core_cm4.h **** 
 143:cmsis_core/core_cm4.h **** #elif defined ( __GNUC__ )
 144:cmsis_core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 145:cmsis_core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 146:cmsis_core/core_cm4.h ****       #define __FPU_USED       1
 147:cmsis_core/core_cm4.h ****     #else
 148:cmsis_core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 149:cmsis_core/core_cm4.h ****       #define __FPU_USED       0
 150:cmsis_core/core_cm4.h ****     #endif
 151:cmsis_core/core_cm4.h ****   #else
 152:cmsis_core/core_cm4.h ****     #define __FPU_USED         0
 153:cmsis_core/core_cm4.h ****   #endif
 154:cmsis_core/core_cm4.h **** 
 155:cmsis_core/core_cm4.h **** #elif defined ( __TASKING__ )
 156:cmsis_core/core_cm4.h ****   #if defined __FPU_VFP__
 157:cmsis_core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 158:cmsis_core/core_cm4.h ****       #define __FPU_USED       1
 159:cmsis_core/core_cm4.h ****     #else
 160:cmsis_core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 161:cmsis_core/core_cm4.h ****       #define __FPU_USED       0
 162:cmsis_core/core_cm4.h ****     #endif
 163:cmsis_core/core_cm4.h ****   #else
 164:cmsis_core/core_cm4.h ****     #define __FPU_USED         0
 165:cmsis_core/core_cm4.h ****   #endif
 166:cmsis_core/core_cm4.h **** #endif
 167:cmsis_core/core_cm4.h **** 
 168:cmsis_core/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 169:cmsis_core/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 170:cmsis_core/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 171:cmsis_core/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 172:cmsis_core/core_cm4.h **** 
 173:cmsis_core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 174:cmsis_core/core_cm4.h **** 
 175:cmsis_core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 176:cmsis_core/core_cm4.h **** 
 177:cmsis_core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 178:cmsis_core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 179:cmsis_core/core_cm4.h **** 
 180:cmsis_core/core_cm4.h **** /* check device defines and use defaults */
 181:cmsis_core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:cmsis_core/core_cm4.h ****   #ifndef __CM4_REV
 183:cmsis_core/core_cm4.h ****     #define __CM4_REV               0x0000
 184:cmsis_core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:cmsis_core/core_cm4.h ****   #endif
 186:cmsis_core/core_cm4.h **** 
 187:cmsis_core/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:cmsis_core/core_cm4.h ****     #define __FPU_PRESENT             0
 189:cmsis_core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:cmsis_core/core_cm4.h ****   #endif
 191:cmsis_core/core_cm4.h **** 
 192:cmsis_core/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:cmsis_core/core_cm4.h ****     #define __MPU_PRESENT             0
 194:cmsis_core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:cmsis_core/core_cm4.h ****   #endif
 196:cmsis_core/core_cm4.h **** 
 197:cmsis_core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:cmsis_core/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 199:cmsis_core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:cmsis_core/core_cm4.h ****   #endif
 201:cmsis_core/core_cm4.h **** 
 202:cmsis_core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:cmsis_core/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 204:cmsis_core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:cmsis_core/core_cm4.h ****   #endif
 206:cmsis_core/core_cm4.h **** #endif
 207:cmsis_core/core_cm4.h **** 
 208:cmsis_core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:cmsis_core/core_cm4.h **** /**
 210:cmsis_core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:cmsis_core/core_cm4.h **** 
 212:cmsis_core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:cmsis_core/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:cmsis_core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:cmsis_core/core_cm4.h **** */
 216:cmsis_core/core_cm4.h **** #ifdef __cplusplus
 217:cmsis_core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 218:cmsis_core/core_cm4.h **** #else
 219:cmsis_core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 220:cmsis_core/core_cm4.h **** #endif
 221:cmsis_core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 222:cmsis_core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 223:cmsis_core/core_cm4.h **** 
 224:cmsis_core/core_cm4.h **** /*@} end of group Cortex_M4 */
 225:cmsis_core/core_cm4.h **** 
 226:cmsis_core/core_cm4.h **** 
 227:cmsis_core/core_cm4.h **** 
 228:cmsis_core/core_cm4.h **** /*******************************************************************************
 229:cmsis_core/core_cm4.h ****  *                 Register Abstraction
 230:cmsis_core/core_cm4.h ****   Core Register contain:
 231:cmsis_core/core_cm4.h ****   - Core Register
 232:cmsis_core/core_cm4.h ****   - Core NVIC Register
 233:cmsis_core/core_cm4.h ****   - Core SCB Register
 234:cmsis_core/core_cm4.h ****   - Core SysTick Register
 235:cmsis_core/core_cm4.h ****   - Core Debug Register
 236:cmsis_core/core_cm4.h ****   - Core MPU Register
 237:cmsis_core/core_cm4.h ****   - Core FPU Register
 238:cmsis_core/core_cm4.h ****  ******************************************************************************/
 239:cmsis_core/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 240:cmsis_core/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 241:cmsis_core/core_cm4.h **** */
 242:cmsis_core/core_cm4.h **** 
 243:cmsis_core/core_cm4.h **** /** \ingroup    CMSIS_core_register
 244:cmsis_core/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 245:cmsis_core/core_cm4.h ****     \brief  Core Register type definitions.
 246:cmsis_core/core_cm4.h ****   @{
 247:cmsis_core/core_cm4.h ****  */
 248:cmsis_core/core_cm4.h **** 
 249:cmsis_core/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 250:cmsis_core/core_cm4.h ****  */
 251:cmsis_core/core_cm4.h **** typedef union
 252:cmsis_core/core_cm4.h **** {
 253:cmsis_core/core_cm4.h ****   struct
 254:cmsis_core/core_cm4.h ****   {
 255:cmsis_core/core_cm4.h **** #if (__CORTEX_M != 0x04)
 256:cmsis_core/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 257:cmsis_core/core_cm4.h **** #else
 258:cmsis_core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 259:cmsis_core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 260:cmsis_core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 261:cmsis_core/core_cm4.h **** #endif
 262:cmsis_core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 263:cmsis_core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 264:cmsis_core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 265:cmsis_core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 266:cmsis_core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 267:cmsis_core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 268:cmsis_core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 269:cmsis_core/core_cm4.h **** } APSR_Type;
 270:cmsis_core/core_cm4.h **** 
 271:cmsis_core/core_cm4.h **** 
 272:cmsis_core/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 273:cmsis_core/core_cm4.h ****  */
 274:cmsis_core/core_cm4.h **** typedef union
 275:cmsis_core/core_cm4.h **** {
 276:cmsis_core/core_cm4.h ****   struct
 277:cmsis_core/core_cm4.h ****   {
 278:cmsis_core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 279:cmsis_core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 280:cmsis_core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 281:cmsis_core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 282:cmsis_core/core_cm4.h **** } IPSR_Type;
 283:cmsis_core/core_cm4.h **** 
 284:cmsis_core/core_cm4.h **** 
 285:cmsis_core/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 286:cmsis_core/core_cm4.h ****  */
 287:cmsis_core/core_cm4.h **** typedef union
 288:cmsis_core/core_cm4.h **** {
 289:cmsis_core/core_cm4.h ****   struct
 290:cmsis_core/core_cm4.h ****   {
 291:cmsis_core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 292:cmsis_core/core_cm4.h **** #if (__CORTEX_M != 0x04)
 293:cmsis_core/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 294:cmsis_core/core_cm4.h **** #else
 295:cmsis_core/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 296:cmsis_core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 297:cmsis_core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 298:cmsis_core/core_cm4.h **** #endif
 299:cmsis_core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 300:cmsis_core/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 301:cmsis_core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 302:cmsis_core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 303:cmsis_core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 304:cmsis_core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 305:cmsis_core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 306:cmsis_core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 307:cmsis_core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 308:cmsis_core/core_cm4.h **** } xPSR_Type;
 309:cmsis_core/core_cm4.h **** 
 310:cmsis_core/core_cm4.h **** 
 311:cmsis_core/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 312:cmsis_core/core_cm4.h ****  */
 313:cmsis_core/core_cm4.h **** typedef union
 314:cmsis_core/core_cm4.h **** {
 315:cmsis_core/core_cm4.h ****   struct
 316:cmsis_core/core_cm4.h ****   {
 317:cmsis_core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 318:cmsis_core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 319:cmsis_core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 320:cmsis_core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 321:cmsis_core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 322:cmsis_core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 323:cmsis_core/core_cm4.h **** } CONTROL_Type;
 324:cmsis_core/core_cm4.h **** 
 325:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 326:cmsis_core/core_cm4.h **** 
 327:cmsis_core/core_cm4.h **** 
 328:cmsis_core/core_cm4.h **** /** \ingroup    CMSIS_core_register
 329:cmsis_core/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 330:cmsis_core/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 331:cmsis_core/core_cm4.h ****   @{
 332:cmsis_core/core_cm4.h ****  */
 333:cmsis_core/core_cm4.h **** 
 334:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 335:cmsis_core/core_cm4.h ****  */
 336:cmsis_core/core_cm4.h **** typedef struct
 337:cmsis_core/core_cm4.h **** {
 338:cmsis_core/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 339:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[24];
 340:cmsis_core/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 341:cmsis_core/core_cm4.h ****        uint32_t RSERVED1[24];
 342:cmsis_core/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 343:cmsis_core/core_cm4.h ****        uint32_t RESERVED2[24];
 344:cmsis_core/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 345:cmsis_core/core_cm4.h ****        uint32_t RESERVED3[24];
 346:cmsis_core/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 347:cmsis_core/core_cm4.h ****        uint32_t RESERVED4[56];
 348:cmsis_core/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 349:cmsis_core/core_cm4.h ****        uint32_t RESERVED5[644];
 350:cmsis_core/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 351:cmsis_core/core_cm4.h **** }  NVIC_Type;
 352:cmsis_core/core_cm4.h **** 
 353:cmsis_core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 354:cmsis_core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 355:cmsis_core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 356:cmsis_core/core_cm4.h **** 
 357:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 358:cmsis_core/core_cm4.h **** 
 359:cmsis_core/core_cm4.h **** 
 360:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 361:cmsis_core/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 362:cmsis_core/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 363:cmsis_core/core_cm4.h ****   @{
 364:cmsis_core/core_cm4.h ****  */
 365:cmsis_core/core_cm4.h **** 
 366:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 367:cmsis_core/core_cm4.h ****  */
 368:cmsis_core/core_cm4.h **** typedef struct
 369:cmsis_core/core_cm4.h **** {
 370:cmsis_core/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 371:cmsis_core/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 372:cmsis_core/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 373:cmsis_core/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 374:cmsis_core/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 375:cmsis_core/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 376:cmsis_core/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 377:cmsis_core/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 378:cmsis_core/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 379:cmsis_core/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 380:cmsis_core/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 381:cmsis_core/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 382:cmsis_core/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 383:cmsis_core/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 384:cmsis_core/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 385:cmsis_core/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 386:cmsis_core/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 387:cmsis_core/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 388:cmsis_core/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 389:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[5];
 390:cmsis_core/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 391:cmsis_core/core_cm4.h **** } SCB_Type;
 392:cmsis_core/core_cm4.h **** 
 393:cmsis_core/core_cm4.h **** /* SCB CPUID Register Definitions */
 394:cmsis_core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 395:cmsis_core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 396:cmsis_core/core_cm4.h **** 
 397:cmsis_core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 398:cmsis_core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 399:cmsis_core/core_cm4.h **** 
 400:cmsis_core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 401:cmsis_core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 402:cmsis_core/core_cm4.h **** 
 403:cmsis_core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 404:cmsis_core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 405:cmsis_core/core_cm4.h **** 
 406:cmsis_core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 407:cmsis_core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 408:cmsis_core/core_cm4.h **** 
 409:cmsis_core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 410:cmsis_core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 411:cmsis_core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 412:cmsis_core/core_cm4.h **** 
 413:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 414:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 415:cmsis_core/core_cm4.h **** 
 416:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 417:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 418:cmsis_core/core_cm4.h **** 
 419:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 420:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 421:cmsis_core/core_cm4.h **** 
 422:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 423:cmsis_core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 424:cmsis_core/core_cm4.h **** 
 425:cmsis_core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 426:cmsis_core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 427:cmsis_core/core_cm4.h **** 
 428:cmsis_core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 429:cmsis_core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 430:cmsis_core/core_cm4.h **** 
 431:cmsis_core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 432:cmsis_core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 433:cmsis_core/core_cm4.h **** 
 434:cmsis_core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 435:cmsis_core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 436:cmsis_core/core_cm4.h **** 
 437:cmsis_core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 438:cmsis_core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 439:cmsis_core/core_cm4.h **** 
 440:cmsis_core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 441:cmsis_core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 442:cmsis_core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 443:cmsis_core/core_cm4.h **** 
 444:cmsis_core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 445:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 446:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 447:cmsis_core/core_cm4.h **** 
 448:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 449:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 450:cmsis_core/core_cm4.h **** 
 451:cmsis_core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 452:cmsis_core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 453:cmsis_core/core_cm4.h **** 
 454:cmsis_core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 455:cmsis_core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 456:cmsis_core/core_cm4.h **** 
 457:cmsis_core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 458:cmsis_core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 459:cmsis_core/core_cm4.h **** 
 460:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 461:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 462:cmsis_core/core_cm4.h **** 
 463:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 464:cmsis_core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 465:cmsis_core/core_cm4.h **** 
 466:cmsis_core/core_cm4.h **** /* SCB System Control Register Definitions */
 467:cmsis_core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 468:cmsis_core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 469:cmsis_core/core_cm4.h **** 
 470:cmsis_core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 471:cmsis_core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 472:cmsis_core/core_cm4.h **** 
 473:cmsis_core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 474:cmsis_core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 475:cmsis_core/core_cm4.h **** 
 476:cmsis_core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 477:cmsis_core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 478:cmsis_core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 479:cmsis_core/core_cm4.h **** 
 480:cmsis_core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 481:cmsis_core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 482:cmsis_core/core_cm4.h **** 
 483:cmsis_core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 484:cmsis_core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 485:cmsis_core/core_cm4.h **** 
 486:cmsis_core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 487:cmsis_core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 488:cmsis_core/core_cm4.h **** 
 489:cmsis_core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 490:cmsis_core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 491:cmsis_core/core_cm4.h **** 
 492:cmsis_core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 493:cmsis_core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 494:cmsis_core/core_cm4.h **** 
 495:cmsis_core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 496:cmsis_core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 497:cmsis_core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 498:cmsis_core/core_cm4.h **** 
 499:cmsis_core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 500:cmsis_core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 501:cmsis_core/core_cm4.h **** 
 502:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 503:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 504:cmsis_core/core_cm4.h **** 
 505:cmsis_core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 506:cmsis_core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 507:cmsis_core/core_cm4.h **** 
 508:cmsis_core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 509:cmsis_core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 510:cmsis_core/core_cm4.h **** 
 511:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 512:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 513:cmsis_core/core_cm4.h **** 
 514:cmsis_core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 515:cmsis_core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 516:cmsis_core/core_cm4.h **** 
 517:cmsis_core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 518:cmsis_core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 519:cmsis_core/core_cm4.h **** 
 520:cmsis_core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 521:cmsis_core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 522:cmsis_core/core_cm4.h **** 
 523:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 524:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 525:cmsis_core/core_cm4.h **** 
 526:cmsis_core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 527:cmsis_core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 528:cmsis_core/core_cm4.h **** 
 529:cmsis_core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 530:cmsis_core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 531:cmsis_core/core_cm4.h **** 
 532:cmsis_core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 533:cmsis_core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 534:cmsis_core/core_cm4.h **** 
 535:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 536:cmsis_core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 537:cmsis_core/core_cm4.h **** 
 538:cmsis_core/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 539:cmsis_core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 540:cmsis_core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 541:cmsis_core/core_cm4.h **** 
 542:cmsis_core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 543:cmsis_core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 544:cmsis_core/core_cm4.h **** 
 545:cmsis_core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 546:cmsis_core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 547:cmsis_core/core_cm4.h **** 
 548:cmsis_core/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 549:cmsis_core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 550:cmsis_core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 551:cmsis_core/core_cm4.h **** 
 552:cmsis_core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 553:cmsis_core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 554:cmsis_core/core_cm4.h **** 
 555:cmsis_core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 556:cmsis_core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 557:cmsis_core/core_cm4.h **** 
 558:cmsis_core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 559:cmsis_core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 560:cmsis_core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 561:cmsis_core/core_cm4.h **** 
 562:cmsis_core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 563:cmsis_core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 564:cmsis_core/core_cm4.h **** 
 565:cmsis_core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 566:cmsis_core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 567:cmsis_core/core_cm4.h **** 
 568:cmsis_core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 569:cmsis_core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 570:cmsis_core/core_cm4.h **** 
 571:cmsis_core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 572:cmsis_core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 573:cmsis_core/core_cm4.h **** 
 574:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 575:cmsis_core/core_cm4.h **** 
 576:cmsis_core/core_cm4.h **** 
 577:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 578:cmsis_core/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 579:cmsis_core/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 580:cmsis_core/core_cm4.h ****   @{
 581:cmsis_core/core_cm4.h ****  */
 582:cmsis_core/core_cm4.h **** 
 583:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 584:cmsis_core/core_cm4.h ****  */
 585:cmsis_core/core_cm4.h **** typedef struct
 586:cmsis_core/core_cm4.h **** {
 587:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[1];
 588:cmsis_core/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 589:cmsis_core/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 590:cmsis_core/core_cm4.h **** } SCnSCB_Type;
 591:cmsis_core/core_cm4.h **** 
 592:cmsis_core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 593:cmsis_core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 594:cmsis_core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 595:cmsis_core/core_cm4.h **** 
 596:cmsis_core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 597:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 598:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 599:cmsis_core/core_cm4.h **** 
 600:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 601:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 602:cmsis_core/core_cm4.h **** 
 603:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 604:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 605:cmsis_core/core_cm4.h **** 
 606:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 607:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 608:cmsis_core/core_cm4.h **** 
 609:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 610:cmsis_core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 611:cmsis_core/core_cm4.h **** 
 612:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 613:cmsis_core/core_cm4.h **** 
 614:cmsis_core/core_cm4.h **** 
 615:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 616:cmsis_core/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 617:cmsis_core/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 618:cmsis_core/core_cm4.h ****   @{
 619:cmsis_core/core_cm4.h ****  */
 620:cmsis_core/core_cm4.h **** 
 621:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 622:cmsis_core/core_cm4.h ****  */
 623:cmsis_core/core_cm4.h **** typedef struct
 624:cmsis_core/core_cm4.h **** {
 625:cmsis_core/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 626:cmsis_core/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 627:cmsis_core/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 628:cmsis_core/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 629:cmsis_core/core_cm4.h **** } SysTick_Type;
 630:cmsis_core/core_cm4.h **** 
 631:cmsis_core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 632:cmsis_core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 633:cmsis_core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 634:cmsis_core/core_cm4.h **** 
 635:cmsis_core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 636:cmsis_core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 637:cmsis_core/core_cm4.h **** 
 638:cmsis_core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 639:cmsis_core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 640:cmsis_core/core_cm4.h **** 
 641:cmsis_core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 642:cmsis_core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 643:cmsis_core/core_cm4.h **** 
 644:cmsis_core/core_cm4.h **** /* SysTick Reload Register Definitions */
 645:cmsis_core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 646:cmsis_core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 647:cmsis_core/core_cm4.h **** 
 648:cmsis_core/core_cm4.h **** /* SysTick Current Register Definitions */
 649:cmsis_core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 650:cmsis_core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 651:cmsis_core/core_cm4.h **** 
 652:cmsis_core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 653:cmsis_core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 654:cmsis_core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 655:cmsis_core/core_cm4.h **** 
 656:cmsis_core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 657:cmsis_core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 658:cmsis_core/core_cm4.h **** 
 659:cmsis_core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 660:cmsis_core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 661:cmsis_core/core_cm4.h **** 
 662:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 663:cmsis_core/core_cm4.h **** 
 664:cmsis_core/core_cm4.h **** 
 665:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 666:cmsis_core/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 667:cmsis_core/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 668:cmsis_core/core_cm4.h ****   @{
 669:cmsis_core/core_cm4.h ****  */
 670:cmsis_core/core_cm4.h **** 
 671:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 672:cmsis_core/core_cm4.h ****  */
 673:cmsis_core/core_cm4.h **** typedef struct
 674:cmsis_core/core_cm4.h **** {
 675:cmsis_core/core_cm4.h ****   __O  union
 676:cmsis_core/core_cm4.h ****   {
 677:cmsis_core/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 678:cmsis_core/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 679:cmsis_core/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 680:cmsis_core/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 681:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[864];
 682:cmsis_core/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 683:cmsis_core/core_cm4.h ****        uint32_t RESERVED1[15];
 684:cmsis_core/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 685:cmsis_core/core_cm4.h ****        uint32_t RESERVED2[15];
 686:cmsis_core/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 687:cmsis_core/core_cm4.h ****        uint32_t RESERVED3[29];
 688:cmsis_core/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 689:cmsis_core/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 690:cmsis_core/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 691:cmsis_core/core_cm4.h ****        uint32_t RESERVED4[43];
 692:cmsis_core/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 693:cmsis_core/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 694:cmsis_core/core_cm4.h ****        uint32_t RESERVED5[6];
 695:cmsis_core/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 696:cmsis_core/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 697:cmsis_core/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 698:cmsis_core/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 699:cmsis_core/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 700:cmsis_core/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 701:cmsis_core/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 702:cmsis_core/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 703:cmsis_core/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 704:cmsis_core/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 705:cmsis_core/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 706:cmsis_core/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 707:cmsis_core/core_cm4.h **** } ITM_Type;
 708:cmsis_core/core_cm4.h **** 
 709:cmsis_core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 710:cmsis_core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 711:cmsis_core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 712:cmsis_core/core_cm4.h **** 
 713:cmsis_core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 714:cmsis_core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 715:cmsis_core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 716:cmsis_core/core_cm4.h **** 
 717:cmsis_core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 718:cmsis_core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 719:cmsis_core/core_cm4.h **** 
 720:cmsis_core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 721:cmsis_core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 722:cmsis_core/core_cm4.h **** 
 723:cmsis_core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 724:cmsis_core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 725:cmsis_core/core_cm4.h **** 
 726:cmsis_core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 727:cmsis_core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 728:cmsis_core/core_cm4.h **** 
 729:cmsis_core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 730:cmsis_core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 731:cmsis_core/core_cm4.h **** 
 732:cmsis_core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 733:cmsis_core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 734:cmsis_core/core_cm4.h **** 
 735:cmsis_core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 736:cmsis_core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 737:cmsis_core/core_cm4.h **** 
 738:cmsis_core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 739:cmsis_core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 740:cmsis_core/core_cm4.h **** 
 741:cmsis_core/core_cm4.h **** /* ITM Integration Write Register Definitions */
 742:cmsis_core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 743:cmsis_core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 744:cmsis_core/core_cm4.h **** 
 745:cmsis_core/core_cm4.h **** /* ITM Integration Read Register Definitions */
 746:cmsis_core/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 747:cmsis_core/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 748:cmsis_core/core_cm4.h **** 
 749:cmsis_core/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 750:cmsis_core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 751:cmsis_core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 752:cmsis_core/core_cm4.h **** 
 753:cmsis_core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 754:cmsis_core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 755:cmsis_core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 756:cmsis_core/core_cm4.h **** 
 757:cmsis_core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 758:cmsis_core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 759:cmsis_core/core_cm4.h **** 
 760:cmsis_core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 761:cmsis_core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 762:cmsis_core/core_cm4.h **** 
 763:cmsis_core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 764:cmsis_core/core_cm4.h **** 
 765:cmsis_core/core_cm4.h **** 
 766:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 767:cmsis_core/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 768:cmsis_core/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 769:cmsis_core/core_cm4.h ****   @{
 770:cmsis_core/core_cm4.h ****  */
 771:cmsis_core/core_cm4.h **** 
 772:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 773:cmsis_core/core_cm4.h ****  */
 774:cmsis_core/core_cm4.h **** typedef struct
 775:cmsis_core/core_cm4.h **** {
 776:cmsis_core/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 777:cmsis_core/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 778:cmsis_core/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 779:cmsis_core/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 780:cmsis_core/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 781:cmsis_core/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 782:cmsis_core/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 783:cmsis_core/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 784:cmsis_core/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 785:cmsis_core/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 786:cmsis_core/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 787:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[1];
 788:cmsis_core/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 789:cmsis_core/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 790:cmsis_core/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 791:cmsis_core/core_cm4.h ****        uint32_t RESERVED1[1];
 792:cmsis_core/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 793:cmsis_core/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 794:cmsis_core/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 795:cmsis_core/core_cm4.h ****        uint32_t RESERVED2[1];
 796:cmsis_core/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 797:cmsis_core/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 798:cmsis_core/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 799:cmsis_core/core_cm4.h **** } DWT_Type;
 800:cmsis_core/core_cm4.h **** 
 801:cmsis_core/core_cm4.h **** /* DWT Control Register Definitions */
 802:cmsis_core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 803:cmsis_core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 804:cmsis_core/core_cm4.h **** 
 805:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 806:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 807:cmsis_core/core_cm4.h **** 
 808:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 809:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 810:cmsis_core/core_cm4.h **** 
 811:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 812:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 813:cmsis_core/core_cm4.h **** 
 814:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 815:cmsis_core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 816:cmsis_core/core_cm4.h **** 
 817:cmsis_core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 818:cmsis_core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 819:cmsis_core/core_cm4.h **** 
 820:cmsis_core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 821:cmsis_core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 822:cmsis_core/core_cm4.h **** 
 823:cmsis_core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 824:cmsis_core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 825:cmsis_core/core_cm4.h **** 
 826:cmsis_core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 827:cmsis_core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 828:cmsis_core/core_cm4.h **** 
 829:cmsis_core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 830:cmsis_core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 831:cmsis_core/core_cm4.h **** 
 832:cmsis_core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 833:cmsis_core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 834:cmsis_core/core_cm4.h **** 
 835:cmsis_core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 836:cmsis_core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 837:cmsis_core/core_cm4.h **** 
 838:cmsis_core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 839:cmsis_core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 840:cmsis_core/core_cm4.h **** 
 841:cmsis_core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 842:cmsis_core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 843:cmsis_core/core_cm4.h **** 
 844:cmsis_core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 845:cmsis_core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 846:cmsis_core/core_cm4.h **** 
 847:cmsis_core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 848:cmsis_core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 849:cmsis_core/core_cm4.h **** 
 850:cmsis_core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 851:cmsis_core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 852:cmsis_core/core_cm4.h **** 
 853:cmsis_core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 854:cmsis_core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 855:cmsis_core/core_cm4.h **** 
 856:cmsis_core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 857:cmsis_core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 858:cmsis_core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 859:cmsis_core/core_cm4.h **** 
 860:cmsis_core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 861:cmsis_core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 862:cmsis_core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 863:cmsis_core/core_cm4.h **** 
 864:cmsis_core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 865:cmsis_core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 866:cmsis_core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 867:cmsis_core/core_cm4.h **** 
 868:cmsis_core/core_cm4.h **** /* DWT LSU Count Register Definitions */
 869:cmsis_core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 870:cmsis_core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 871:cmsis_core/core_cm4.h **** 
 872:cmsis_core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 873:cmsis_core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 874:cmsis_core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 875:cmsis_core/core_cm4.h **** 
 876:cmsis_core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 877:cmsis_core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 878:cmsis_core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 879:cmsis_core/core_cm4.h **** 
 880:cmsis_core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 881:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 882:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 883:cmsis_core/core_cm4.h **** 
 884:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 885:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 886:cmsis_core/core_cm4.h **** 
 887:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 888:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 889:cmsis_core/core_cm4.h **** 
 890:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 891:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 892:cmsis_core/core_cm4.h **** 
 893:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 894:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 895:cmsis_core/core_cm4.h **** 
 896:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 897:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 898:cmsis_core/core_cm4.h **** 
 899:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 900:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 901:cmsis_core/core_cm4.h **** 
 902:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 903:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 904:cmsis_core/core_cm4.h **** 
 905:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 906:cmsis_core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 907:cmsis_core/core_cm4.h **** 
 908:cmsis_core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 909:cmsis_core/core_cm4.h **** 
 910:cmsis_core/core_cm4.h **** 
 911:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 912:cmsis_core/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 913:cmsis_core/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 914:cmsis_core/core_cm4.h ****   @{
 915:cmsis_core/core_cm4.h ****  */
 916:cmsis_core/core_cm4.h **** 
 917:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 918:cmsis_core/core_cm4.h ****  */
 919:cmsis_core/core_cm4.h **** typedef struct
 920:cmsis_core/core_cm4.h **** {
 921:cmsis_core/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 922:cmsis_core/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 923:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[2];
 924:cmsis_core/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 925:cmsis_core/core_cm4.h ****        uint32_t RESERVED1[55];
 926:cmsis_core/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 927:cmsis_core/core_cm4.h ****        uint32_t RESERVED2[131];
 928:cmsis_core/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 929:cmsis_core/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 930:cmsis_core/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 931:cmsis_core/core_cm4.h ****        uint32_t RESERVED3[759];
 932:cmsis_core/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 933:cmsis_core/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 934:cmsis_core/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 935:cmsis_core/core_cm4.h ****        uint32_t RESERVED4[1];
 936:cmsis_core/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 937:cmsis_core/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 938:cmsis_core/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 939:cmsis_core/core_cm4.h ****        uint32_t RESERVED5[39];
 940:cmsis_core/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 941:cmsis_core/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 942:cmsis_core/core_cm4.h ****        uint32_t RESERVED7[8];
 943:cmsis_core/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 944:cmsis_core/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 945:cmsis_core/core_cm4.h **** } TPI_Type;
 946:cmsis_core/core_cm4.h **** 
 947:cmsis_core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 948:cmsis_core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 949:cmsis_core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 950:cmsis_core/core_cm4.h **** 
 951:cmsis_core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 952:cmsis_core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 953:cmsis_core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 954:cmsis_core/core_cm4.h **** 
 955:cmsis_core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 956:cmsis_core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 957:cmsis_core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 958:cmsis_core/core_cm4.h **** 
 959:cmsis_core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 960:cmsis_core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 961:cmsis_core/core_cm4.h **** 
 962:cmsis_core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 963:cmsis_core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 964:cmsis_core/core_cm4.h **** 
 965:cmsis_core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 966:cmsis_core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 967:cmsis_core/core_cm4.h **** 
 968:cmsis_core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 969:cmsis_core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 970:cmsis_core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 971:cmsis_core/core_cm4.h **** 
 972:cmsis_core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 973:cmsis_core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 974:cmsis_core/core_cm4.h **** 
 975:cmsis_core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 976:cmsis_core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 977:cmsis_core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 978:cmsis_core/core_cm4.h **** 
 979:cmsis_core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 980:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 981:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 982:cmsis_core/core_cm4.h **** 
 983:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 984:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 985:cmsis_core/core_cm4.h **** 
 986:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 987:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 988:cmsis_core/core_cm4.h **** 
 989:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 990:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 991:cmsis_core/core_cm4.h **** 
 992:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 993:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 994:cmsis_core/core_cm4.h **** 
 995:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 996:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 997:cmsis_core/core_cm4.h **** 
 998:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 999:cmsis_core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1000:cmsis_core/core_cm4.h **** 
1001:cmsis_core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1002:cmsis_core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1003:cmsis_core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1004:cmsis_core/core_cm4.h **** 
1005:cmsis_core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1006:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1007:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1008:cmsis_core/core_cm4.h **** 
1009:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1010:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1011:cmsis_core/core_cm4.h **** 
1012:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1013:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1014:cmsis_core/core_cm4.h **** 
1015:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1016:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1017:cmsis_core/core_cm4.h **** 
1018:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1019:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1020:cmsis_core/core_cm4.h **** 
1021:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1022:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1023:cmsis_core/core_cm4.h **** 
1024:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1025:cmsis_core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1026:cmsis_core/core_cm4.h **** 
1027:cmsis_core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1028:cmsis_core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1029:cmsis_core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1030:cmsis_core/core_cm4.h **** 
1031:cmsis_core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1032:cmsis_core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1033:cmsis_core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1034:cmsis_core/core_cm4.h **** 
1035:cmsis_core/core_cm4.h **** /* TPI DEVID Register Definitions */
1036:cmsis_core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1037:cmsis_core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1038:cmsis_core/core_cm4.h **** 
1039:cmsis_core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1040:cmsis_core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1041:cmsis_core/core_cm4.h **** 
1042:cmsis_core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1043:cmsis_core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1044:cmsis_core/core_cm4.h **** 
1045:cmsis_core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1046:cmsis_core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1047:cmsis_core/core_cm4.h **** 
1048:cmsis_core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1049:cmsis_core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1050:cmsis_core/core_cm4.h **** 
1051:cmsis_core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1052:cmsis_core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1053:cmsis_core/core_cm4.h **** 
1054:cmsis_core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1055:cmsis_core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1056:cmsis_core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1057:cmsis_core/core_cm4.h **** 
1058:cmsis_core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1059:cmsis_core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1060:cmsis_core/core_cm4.h **** 
1061:cmsis_core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1062:cmsis_core/core_cm4.h **** 
1063:cmsis_core/core_cm4.h **** 
1064:cmsis_core/core_cm4.h **** #if (__MPU_PRESENT == 1)
1065:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
1066:cmsis_core/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1067:cmsis_core/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1068:cmsis_core/core_cm4.h ****   @{
1069:cmsis_core/core_cm4.h ****  */
1070:cmsis_core/core_cm4.h **** 
1071:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1072:cmsis_core/core_cm4.h ****  */
1073:cmsis_core/core_cm4.h **** typedef struct
1074:cmsis_core/core_cm4.h **** {
1075:cmsis_core/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1076:cmsis_core/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1077:cmsis_core/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1078:cmsis_core/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1079:cmsis_core/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1080:cmsis_core/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1081:cmsis_core/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1082:cmsis_core/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1083:cmsis_core/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1084:cmsis_core/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1085:cmsis_core/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1086:cmsis_core/core_cm4.h **** } MPU_Type;
1087:cmsis_core/core_cm4.h **** 
1088:cmsis_core/core_cm4.h **** /* MPU Type Register */
1089:cmsis_core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1090:cmsis_core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1091:cmsis_core/core_cm4.h **** 
1092:cmsis_core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1093:cmsis_core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1094:cmsis_core/core_cm4.h **** 
1095:cmsis_core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1096:cmsis_core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1097:cmsis_core/core_cm4.h **** 
1098:cmsis_core/core_cm4.h **** /* MPU Control Register */
1099:cmsis_core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1100:cmsis_core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1101:cmsis_core/core_cm4.h **** 
1102:cmsis_core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1103:cmsis_core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1104:cmsis_core/core_cm4.h **** 
1105:cmsis_core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1106:cmsis_core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1107:cmsis_core/core_cm4.h **** 
1108:cmsis_core/core_cm4.h **** /* MPU Region Number Register */
1109:cmsis_core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1110:cmsis_core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1111:cmsis_core/core_cm4.h **** 
1112:cmsis_core/core_cm4.h **** /* MPU Region Base Address Register */
1113:cmsis_core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1114:cmsis_core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1115:cmsis_core/core_cm4.h **** 
1116:cmsis_core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1117:cmsis_core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1118:cmsis_core/core_cm4.h **** 
1119:cmsis_core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1120:cmsis_core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1121:cmsis_core/core_cm4.h **** 
1122:cmsis_core/core_cm4.h **** /* MPU Region Attribute and Size Register */
1123:cmsis_core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1124:cmsis_core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1125:cmsis_core/core_cm4.h **** 
1126:cmsis_core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1127:cmsis_core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1128:cmsis_core/core_cm4.h **** 
1129:cmsis_core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1130:cmsis_core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1131:cmsis_core/core_cm4.h **** 
1132:cmsis_core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1133:cmsis_core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1134:cmsis_core/core_cm4.h **** 
1135:cmsis_core/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1136:cmsis_core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1137:cmsis_core/core_cm4.h **** 
1138:cmsis_core/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1139:cmsis_core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1140:cmsis_core/core_cm4.h **** 
1141:cmsis_core/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1142:cmsis_core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1143:cmsis_core/core_cm4.h **** 
1144:cmsis_core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1145:cmsis_core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1146:cmsis_core/core_cm4.h **** 
1147:cmsis_core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1148:cmsis_core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1149:cmsis_core/core_cm4.h **** 
1150:cmsis_core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1151:cmsis_core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1152:cmsis_core/core_cm4.h **** 
1153:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1154:cmsis_core/core_cm4.h **** #endif
1155:cmsis_core/core_cm4.h **** 
1156:cmsis_core/core_cm4.h **** 
1157:cmsis_core/core_cm4.h **** #if (__FPU_PRESENT == 1)
1158:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
1159:cmsis_core/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1160:cmsis_core/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1161:cmsis_core/core_cm4.h ****   @{
1162:cmsis_core/core_cm4.h ****  */
1163:cmsis_core/core_cm4.h **** 
1164:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1165:cmsis_core/core_cm4.h ****  */
1166:cmsis_core/core_cm4.h **** typedef struct
1167:cmsis_core/core_cm4.h **** {
1168:cmsis_core/core_cm4.h ****        uint32_t RESERVED0[1];
1169:cmsis_core/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1170:cmsis_core/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1171:cmsis_core/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1172:cmsis_core/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1173:cmsis_core/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1174:cmsis_core/core_cm4.h **** } FPU_Type;
1175:cmsis_core/core_cm4.h **** 
1176:cmsis_core/core_cm4.h **** /* Floating-Point Context Control Register */
1177:cmsis_core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1178:cmsis_core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1179:cmsis_core/core_cm4.h **** 
1180:cmsis_core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1181:cmsis_core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1182:cmsis_core/core_cm4.h **** 
1183:cmsis_core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1184:cmsis_core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1185:cmsis_core/core_cm4.h **** 
1186:cmsis_core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1187:cmsis_core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1188:cmsis_core/core_cm4.h **** 
1189:cmsis_core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1190:cmsis_core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1191:cmsis_core/core_cm4.h **** 
1192:cmsis_core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1193:cmsis_core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1194:cmsis_core/core_cm4.h **** 
1195:cmsis_core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1196:cmsis_core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1197:cmsis_core/core_cm4.h **** 
1198:cmsis_core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1199:cmsis_core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1200:cmsis_core/core_cm4.h **** 
1201:cmsis_core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1202:cmsis_core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1203:cmsis_core/core_cm4.h **** 
1204:cmsis_core/core_cm4.h **** /* Floating-Point Context Address Register */
1205:cmsis_core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1206:cmsis_core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1207:cmsis_core/core_cm4.h **** 
1208:cmsis_core/core_cm4.h **** /* Floating-Point Default Status Control Register */
1209:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1210:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1211:cmsis_core/core_cm4.h **** 
1212:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1213:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1214:cmsis_core/core_cm4.h **** 
1215:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1216:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1217:cmsis_core/core_cm4.h **** 
1218:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1219:cmsis_core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1220:cmsis_core/core_cm4.h **** 
1221:cmsis_core/core_cm4.h **** /* Media and FP Feature Register 0 */
1222:cmsis_core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1223:cmsis_core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1224:cmsis_core/core_cm4.h **** 
1225:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1226:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1227:cmsis_core/core_cm4.h **** 
1228:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1229:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1230:cmsis_core/core_cm4.h **** 
1231:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1232:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1233:cmsis_core/core_cm4.h **** 
1234:cmsis_core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1235:cmsis_core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1236:cmsis_core/core_cm4.h **** 
1237:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1238:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1239:cmsis_core/core_cm4.h **** 
1240:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1241:cmsis_core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1242:cmsis_core/core_cm4.h **** 
1243:cmsis_core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1244:cmsis_core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1245:cmsis_core/core_cm4.h **** 
1246:cmsis_core/core_cm4.h **** /* Media and FP Feature Register 1 */
1247:cmsis_core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1248:cmsis_core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1249:cmsis_core/core_cm4.h **** 
1250:cmsis_core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1251:cmsis_core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1252:cmsis_core/core_cm4.h **** 
1253:cmsis_core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1254:cmsis_core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1255:cmsis_core/core_cm4.h **** 
1256:cmsis_core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1257:cmsis_core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1258:cmsis_core/core_cm4.h **** 
1259:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1260:cmsis_core/core_cm4.h **** #endif
1261:cmsis_core/core_cm4.h **** 
1262:cmsis_core/core_cm4.h **** 
1263:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_core_register
1264:cmsis_core/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1265:cmsis_core/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1266:cmsis_core/core_cm4.h ****   @{
1267:cmsis_core/core_cm4.h ****  */
1268:cmsis_core/core_cm4.h **** 
1269:cmsis_core/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1270:cmsis_core/core_cm4.h ****  */
1271:cmsis_core/core_cm4.h **** typedef struct
1272:cmsis_core/core_cm4.h **** {
1273:cmsis_core/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1274:cmsis_core/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1275:cmsis_core/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1276:cmsis_core/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1277:cmsis_core/core_cm4.h **** } CoreDebug_Type;
1278:cmsis_core/core_cm4.h **** 
1279:cmsis_core/core_cm4.h **** /* Debug Halting Control and Status Register */
1280:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1281:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1282:cmsis_core/core_cm4.h **** 
1283:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1284:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1285:cmsis_core/core_cm4.h **** 
1286:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1287:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1288:cmsis_core/core_cm4.h **** 
1289:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1290:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1291:cmsis_core/core_cm4.h **** 
1292:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1293:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1294:cmsis_core/core_cm4.h **** 
1295:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1296:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1297:cmsis_core/core_cm4.h **** 
1298:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1299:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1300:cmsis_core/core_cm4.h **** 
1301:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1302:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1303:cmsis_core/core_cm4.h **** 
1304:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1305:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1306:cmsis_core/core_cm4.h **** 
1307:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1308:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1309:cmsis_core/core_cm4.h **** 
1310:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1311:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1312:cmsis_core/core_cm4.h **** 
1313:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1314:cmsis_core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1315:cmsis_core/core_cm4.h **** 
1316:cmsis_core/core_cm4.h **** /* Debug Core Register Selector Register */
1317:cmsis_core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1318:cmsis_core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1319:cmsis_core/core_cm4.h **** 
1320:cmsis_core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1321:cmsis_core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1322:cmsis_core/core_cm4.h **** 
1323:cmsis_core/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1324:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1325:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1326:cmsis_core/core_cm4.h **** 
1327:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1328:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1329:cmsis_core/core_cm4.h **** 
1330:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1331:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1332:cmsis_core/core_cm4.h **** 
1333:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1334:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1335:cmsis_core/core_cm4.h **** 
1336:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1337:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1338:cmsis_core/core_cm4.h **** 
1339:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1340:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1341:cmsis_core/core_cm4.h **** 
1342:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1343:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1344:cmsis_core/core_cm4.h **** 
1345:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1346:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1347:cmsis_core/core_cm4.h **** 
1348:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1349:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1350:cmsis_core/core_cm4.h **** 
1351:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1352:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1353:cmsis_core/core_cm4.h **** 
1354:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1355:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1356:cmsis_core/core_cm4.h **** 
1357:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1358:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1359:cmsis_core/core_cm4.h **** 
1360:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1361:cmsis_core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1362:cmsis_core/core_cm4.h **** 
1363:cmsis_core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1364:cmsis_core/core_cm4.h **** 
1365:cmsis_core/core_cm4.h **** 
1366:cmsis_core/core_cm4.h **** /** \ingroup    CMSIS_core_register
1367:cmsis_core/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1368:cmsis_core/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1369:cmsis_core/core_cm4.h ****   @{
1370:cmsis_core/core_cm4.h ****  */
1371:cmsis_core/core_cm4.h **** 
1372:cmsis_core/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1373:cmsis_core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1374:cmsis_core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1375:cmsis_core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1376:cmsis_core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1377:cmsis_core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1378:cmsis_core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1379:cmsis_core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1380:cmsis_core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1381:cmsis_core/core_cm4.h **** 
1382:cmsis_core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1383:cmsis_core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1384:cmsis_core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1385:cmsis_core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1386:cmsis_core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1387:cmsis_core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1388:cmsis_core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1389:cmsis_core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1390:cmsis_core/core_cm4.h **** 
1391:cmsis_core/core_cm4.h **** #if (__MPU_PRESENT == 1)
1392:cmsis_core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1393:cmsis_core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1394:cmsis_core/core_cm4.h **** #endif
1395:cmsis_core/core_cm4.h **** 
1396:cmsis_core/core_cm4.h **** #if (__FPU_PRESENT == 1)
1397:cmsis_core/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1398:cmsis_core/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1399:cmsis_core/core_cm4.h **** #endif
1400:cmsis_core/core_cm4.h **** 
1401:cmsis_core/core_cm4.h **** /*@} */
1402:cmsis_core/core_cm4.h **** 
1403:cmsis_core/core_cm4.h **** 
1404:cmsis_core/core_cm4.h **** 
1405:cmsis_core/core_cm4.h **** /*******************************************************************************
1406:cmsis_core/core_cm4.h ****  *                Hardware Abstraction Layer
1407:cmsis_core/core_cm4.h ****   Core Function Interface contains:
1408:cmsis_core/core_cm4.h ****   - Core NVIC Functions
1409:cmsis_core/core_cm4.h ****   - Core SysTick Functions
1410:cmsis_core/core_cm4.h ****   - Core Debug Functions
1411:cmsis_core/core_cm4.h ****   - Core Register Access Functions
1412:cmsis_core/core_cm4.h ****  ******************************************************************************/
1413:cmsis_core/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1414:cmsis_core/core_cm4.h **** */
1415:cmsis_core/core_cm4.h **** 
1416:cmsis_core/core_cm4.h **** 
1417:cmsis_core/core_cm4.h **** 
1418:cmsis_core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1419:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1420:cmsis_core/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1421:cmsis_core/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1422:cmsis_core/core_cm4.h ****     @{
1423:cmsis_core/core_cm4.h ****  */
1424:cmsis_core/core_cm4.h **** 
1425:cmsis_core/core_cm4.h **** /** \brief  Set Priority Grouping
1426:cmsis_core/core_cm4.h **** 
1427:cmsis_core/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1428:cmsis_core/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1429:cmsis_core/core_cm4.h ****   Only values from 0..7 are used.
1430:cmsis_core/core_cm4.h ****   In case of a conflict between priority grouping and available
1431:cmsis_core/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1432:cmsis_core/core_cm4.h **** 
1433:cmsis_core/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1434:cmsis_core/core_cm4.h ****  */
1435:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1436:cmsis_core/core_cm4.h **** {
1437:cmsis_core/core_cm4.h ****   uint32_t reg_value;
1438:cmsis_core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1439:cmsis_core/core_cm4.h **** 
1440:cmsis_core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1441:cmsis_core/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1442:cmsis_core/core_cm4.h ****   reg_value  =  (reg_value                                 |
1443:cmsis_core/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1444:cmsis_core/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1445:cmsis_core/core_cm4.h ****   SCB->AIRCR =  reg_value;
1446:cmsis_core/core_cm4.h **** }
1447:cmsis_core/core_cm4.h **** 
1448:cmsis_core/core_cm4.h **** 
1449:cmsis_core/core_cm4.h **** /** \brief  Get Priority Grouping
1450:cmsis_core/core_cm4.h **** 
1451:cmsis_core/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1452:cmsis_core/core_cm4.h **** 
1453:cmsis_core/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1454:cmsis_core/core_cm4.h ****  */
1455:cmsis_core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1456:cmsis_core/core_cm4.h **** {
1457:cmsis_core/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1458:cmsis_core/core_cm4.h **** }
1459:cmsis_core/core_cm4.h **** 
1460:cmsis_core/core_cm4.h **** 
1461:cmsis_core/core_cm4.h **** /** \brief  Enable External Interrupt
1462:cmsis_core/core_cm4.h **** 
1463:cmsis_core/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1464:cmsis_core/core_cm4.h **** 
1465:cmsis_core/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1466:cmsis_core/core_cm4.h ****  */
1467:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1468:cmsis_core/core_cm4.h **** {
1469:cmsis_core/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1470:cmsis_core/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1471:cmsis_core/core_cm4.h **** }
1472:cmsis_core/core_cm4.h **** 
1473:cmsis_core/core_cm4.h **** 
1474:cmsis_core/core_cm4.h **** /** \brief  Disable External Interrupt
1475:cmsis_core/core_cm4.h **** 
1476:cmsis_core/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1477:cmsis_core/core_cm4.h **** 
1478:cmsis_core/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1479:cmsis_core/core_cm4.h ****  */
1480:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1481:cmsis_core/core_cm4.h **** {
1482:cmsis_core/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1483:cmsis_core/core_cm4.h **** }
1484:cmsis_core/core_cm4.h **** 
1485:cmsis_core/core_cm4.h **** 
1486:cmsis_core/core_cm4.h **** /** \brief  Get Pending Interrupt
1487:cmsis_core/core_cm4.h **** 
1488:cmsis_core/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1489:cmsis_core/core_cm4.h ****     for the specified interrupt.
1490:cmsis_core/core_cm4.h **** 
1491:cmsis_core/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1492:cmsis_core/core_cm4.h **** 
1493:cmsis_core/core_cm4.h ****     \return             0  Interrupt status is not pending.
1494:cmsis_core/core_cm4.h ****     \return             1  Interrupt status is pending.
1495:cmsis_core/core_cm4.h ****  */
1496:cmsis_core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1497:cmsis_core/core_cm4.h **** {
1498:cmsis_core/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1499:cmsis_core/core_cm4.h **** }
1500:cmsis_core/core_cm4.h **** 
1501:cmsis_core/core_cm4.h **** 
1502:cmsis_core/core_cm4.h **** /** \brief  Set Pending Interrupt
1503:cmsis_core/core_cm4.h **** 
1504:cmsis_core/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1505:cmsis_core/core_cm4.h **** 
1506:cmsis_core/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1507:cmsis_core/core_cm4.h ****  */
1508:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1509:cmsis_core/core_cm4.h **** {
1510:cmsis_core/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1511:cmsis_core/core_cm4.h **** }
1512:cmsis_core/core_cm4.h **** 
1513:cmsis_core/core_cm4.h **** 
1514:cmsis_core/core_cm4.h **** /** \brief  Clear Pending Interrupt
1515:cmsis_core/core_cm4.h **** 
1516:cmsis_core/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1517:cmsis_core/core_cm4.h **** 
1518:cmsis_core/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1519:cmsis_core/core_cm4.h ****  */
1520:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1521:cmsis_core/core_cm4.h **** {
1522:cmsis_core/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1523:cmsis_core/core_cm4.h **** }
1524:cmsis_core/core_cm4.h **** 
1525:cmsis_core/core_cm4.h **** 
1526:cmsis_core/core_cm4.h **** /** \brief  Get Active Interrupt
1527:cmsis_core/core_cm4.h **** 
1528:cmsis_core/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1529:cmsis_core/core_cm4.h **** 
1530:cmsis_core/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1531:cmsis_core/core_cm4.h **** 
1532:cmsis_core/core_cm4.h ****     \return             0  Interrupt status is not active.
1533:cmsis_core/core_cm4.h ****     \return             1  Interrupt status is active.
1534:cmsis_core/core_cm4.h ****  */
1535:cmsis_core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1536:cmsis_core/core_cm4.h **** {
1537:cmsis_core/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1538:cmsis_core/core_cm4.h **** }
1539:cmsis_core/core_cm4.h **** 
1540:cmsis_core/core_cm4.h **** 
1541:cmsis_core/core_cm4.h **** /** \brief  Set Interrupt Priority
1542:cmsis_core/core_cm4.h **** 
1543:cmsis_core/core_cm4.h ****     The function sets the priority of an interrupt.
1544:cmsis_core/core_cm4.h **** 
1545:cmsis_core/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1546:cmsis_core/core_cm4.h **** 
1547:cmsis_core/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1548:cmsis_core/core_cm4.h ****     \param [in]  priority  Priority to set.
1549:cmsis_core/core_cm4.h ****  */
1550:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1551:cmsis_core/core_cm4.h **** {
  65              		.loc 1 1551 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 8
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 82B0     		sub	sp, sp, #8	@,,
  71              		.cfi_def_cfa_offset 8
  72 0002 0346     		mov	r3, r0	@ tmp121, IRQn
  73 0004 0091     		str	r1, [sp]	@ priority, priority
  74 0006 8DF80730 		strb	r3, [sp, #7]	@ tmp122, IRQn
1552:cmsis_core/core_cm4.h ****   if(IRQn < 0) {
  75              		.loc 1 1552 0
  76 000a 9DF90730 		ldrsb	r3, [sp, #7]	@ tmp123, IRQn
  77 000e 002B     		cmp	r3, #0	@ tmp123,
  78 0010 0CDA     		bge	.L2	@,
1553:cmsis_core/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  79              		.loc 1 1553 0
  80 0012 0C49     		ldr	r1, .L4	@ D.7293,
  81 0014 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ IRQn.1, IRQn
  82 0018 03F00F03 		and	r3, r3, #15	@ D.7294, D.7294,
  83 001c 043B     		subs	r3, r3, #4	@ D.7294, D.7294,
  84 001e 009A     		ldr	r2, [sp]	@ tmp124, priority
  85 0020 D2B2     		uxtb	r2, r2	@ D.7295, tmp124
  86 0022 1201     		lsls	r2, r2, #4	@ tmp125, D.7295,
  87 0024 D2B2     		uxtb	r2, r2	@ D.7295, tmp125
  88 0026 0B44     		add	r3, r3, r1	@ tmp126, D.7293
  89 0028 1A76     		strb	r2, [r3, #24]	@ tmp127, _2->SHP
  90 002a 09E0     		b	.L1	@
  91              	.L2:
1554:cmsis_core/core_cm4.h ****   else {
1555:cmsis_core/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
  92              		.loc 1 1555 0
  93 002c 0649     		ldr	r1, .L4+4	@ D.7296,
  94 002e 9DF90730 		ldrsb	r3, [sp, #7]	@ D.7294, IRQn
  95 0032 009A     		ldr	r2, [sp]	@ tmp128, priority
  96 0034 D2B2     		uxtb	r2, r2	@ D.7295, tmp128
  97 0036 1201     		lsls	r2, r2, #4	@ tmp129, D.7295,
  98 0038 D2B2     		uxtb	r2, r2	@ D.7295, tmp129
  99 003a 0B44     		add	r3, r3, r1	@ tmp130, D.7296
 100 003c 83F80023 		strb	r2, [r3, #768]	@ tmp131, _10->IP
 101              	.L1:
1556:cmsis_core/core_cm4.h **** }
 102              		.loc 1 1556 0
 103 0040 02B0     		add	sp, sp, #8	@,,
 104              		@ sp needed	@
 105 0042 7047     		bx	lr	@
 106              	.L5:
 107              		.align	2
 108              	.L4:
 109 0044 00ED00E0 		.word	-536810240
 110 0048 00E100E0 		.word	-536813312
 111              		.cfi_endproc
 112              	.LFE107:
 114              		.align	2
 115              		.thumb
 116              		.thumb_func
 118              	SysTick_Config:
 119              	.LFB112:
1557:cmsis_core/core_cm4.h **** 
1558:cmsis_core/core_cm4.h **** 
1559:cmsis_core/core_cm4.h **** /** \brief  Get Interrupt Priority
1560:cmsis_core/core_cm4.h **** 
1561:cmsis_core/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1562:cmsis_core/core_cm4.h ****     number can be positive to specify an external (device specific)
1563:cmsis_core/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1564:cmsis_core/core_cm4.h **** 
1565:cmsis_core/core_cm4.h **** 
1566:cmsis_core/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1567:cmsis_core/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1568:cmsis_core/core_cm4.h ****                         priority bits of the microcontroller.
1569:cmsis_core/core_cm4.h ****  */
1570:cmsis_core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1571:cmsis_core/core_cm4.h **** {
1572:cmsis_core/core_cm4.h **** 
1573:cmsis_core/core_cm4.h ****   if(IRQn < 0) {
1574:cmsis_core/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1575:cmsis_core/core_cm4.h ****   else {
1576:cmsis_core/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1577:cmsis_core/core_cm4.h **** }
1578:cmsis_core/core_cm4.h **** 
1579:cmsis_core/core_cm4.h **** 
1580:cmsis_core/core_cm4.h **** /** \brief  Encode Priority
1581:cmsis_core/core_cm4.h **** 
1582:cmsis_core/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1583:cmsis_core/core_cm4.h ****     preemptive priority value, and subpriority value.
1584:cmsis_core/core_cm4.h ****     In case of a conflict between priority grouping and available
1585:cmsis_core/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1586:cmsis_core/core_cm4.h **** 
1587:cmsis_core/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1588:cmsis_core/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1589:cmsis_core/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1590:cmsis_core/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1591:cmsis_core/core_cm4.h ****  */
1592:cmsis_core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1593:cmsis_core/core_cm4.h **** {
1594:cmsis_core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1595:cmsis_core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1596:cmsis_core/core_cm4.h ****   uint32_t SubPriorityBits;
1597:cmsis_core/core_cm4.h **** 
1598:cmsis_core/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1599:cmsis_core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1600:cmsis_core/core_cm4.h **** 
1601:cmsis_core/core_cm4.h ****   return (
1602:cmsis_core/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1603:cmsis_core/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1604:cmsis_core/core_cm4.h ****          );
1605:cmsis_core/core_cm4.h **** }
1606:cmsis_core/core_cm4.h **** 
1607:cmsis_core/core_cm4.h **** 
1608:cmsis_core/core_cm4.h **** /** \brief  Decode Priority
1609:cmsis_core/core_cm4.h **** 
1610:cmsis_core/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1611:cmsis_core/core_cm4.h ****     preemptive priority value and subpriority value.
1612:cmsis_core/core_cm4.h ****     In case of a conflict between priority grouping and available
1613:cmsis_core/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1614:cmsis_core/core_cm4.h **** 
1615:cmsis_core/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1616:cmsis_core/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1617:cmsis_core/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1618:cmsis_core/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1619:cmsis_core/core_cm4.h ****  */
1620:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1621:cmsis_core/core_cm4.h **** {
1622:cmsis_core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1623:cmsis_core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1624:cmsis_core/core_cm4.h ****   uint32_t SubPriorityBits;
1625:cmsis_core/core_cm4.h **** 
1626:cmsis_core/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1627:cmsis_core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1628:cmsis_core/core_cm4.h **** 
1629:cmsis_core/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1630:cmsis_core/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1631:cmsis_core/core_cm4.h **** }
1632:cmsis_core/core_cm4.h **** 
1633:cmsis_core/core_cm4.h **** 
1634:cmsis_core/core_cm4.h **** /** \brief  System Reset
1635:cmsis_core/core_cm4.h **** 
1636:cmsis_core/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1637:cmsis_core/core_cm4.h ****  */
1638:cmsis_core/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1639:cmsis_core/core_cm4.h **** {
1640:cmsis_core/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1641:cmsis_core/core_cm4.h ****                                                                   buffered write are completed befo
1642:cmsis_core/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1643:cmsis_core/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1644:cmsis_core/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1645:cmsis_core/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1646:cmsis_core/core_cm4.h ****   while(1);                                                    /* wait until reset */
1647:cmsis_core/core_cm4.h **** }
1648:cmsis_core/core_cm4.h **** 
1649:cmsis_core/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1650:cmsis_core/core_cm4.h **** 
1651:cmsis_core/core_cm4.h **** 
1652:cmsis_core/core_cm4.h **** 
1653:cmsis_core/core_cm4.h **** /* ##################################    SysTick function  ########################################
1654:cmsis_core/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1655:cmsis_core/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1656:cmsis_core/core_cm4.h ****     \brief      Functions that configure the System.
1657:cmsis_core/core_cm4.h ****   @{
1658:cmsis_core/core_cm4.h ****  */
1659:cmsis_core/core_cm4.h **** 
1660:cmsis_core/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1661:cmsis_core/core_cm4.h **** 
1662:cmsis_core/core_cm4.h **** /** \brief  System Tick Configuration
1663:cmsis_core/core_cm4.h **** 
1664:cmsis_core/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1665:cmsis_core/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1666:cmsis_core/core_cm4.h **** 
1667:cmsis_core/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1668:cmsis_core/core_cm4.h **** 
1669:cmsis_core/core_cm4.h ****     \return          0  Function succeeded.
1670:cmsis_core/core_cm4.h ****     \return          1  Function failed.
1671:cmsis_core/core_cm4.h **** 
1672:cmsis_core/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1673:cmsis_core/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1674:cmsis_core/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1675:cmsis_core/core_cm4.h **** 
1676:cmsis_core/core_cm4.h ****  */
1677:cmsis_core/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1678:cmsis_core/core_cm4.h **** {
 120              		.loc 1 1678 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124 004c 00B5     		push	{lr}	@
 125              		.cfi_def_cfa_offset 4
 126              		.cfi_offset 14, -4
 127 004e 83B0     		sub	sp, sp, #12	@,,
 128              		.cfi_def_cfa_offset 16
 129 0050 0190     		str	r0, [sp, #4]	@ ticks, ticks
1679:cmsis_core/core_cm4.h ****   if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 130              		.loc 1 1679 0
 131 0052 019B     		ldr	r3, [sp, #4]	@ tmp117, ticks
 132 0054 013B     		subs	r3, r3, #1	@ D.7298, tmp117,
 133 0056 B3F1807F 		cmp	r3, #16777216	@ D.7298,
 134 005a 01D3     		bcc	.L7	@,
 135              		.loc 1 1679 0 is_stmt 0 discriminator 1
 136 005c 0123     		movs	r3, #1	@ D.7297,
 137 005e 0FE0     		b	.L8	@
 138              	.L7:
1680:cmsis_core/core_cm4.h **** 
1681:cmsis_core/core_cm4.h ****   SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 139              		.loc 1 1681 0 is_stmt 1
 140 0060 094B     		ldr	r3, .L9	@ D.7299,
 141 0062 019A     		ldr	r2, [sp, #4]	@ tmp118, ticks
 142 0064 013A     		subs	r2, r2, #1	@ D.7298, tmp118,
 143 0066 5A60     		str	r2, [r3, #4]	@ D.7298, _5->LOAD
1682:cmsis_core/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrup
 144              		.loc 1 1682 0
 145 0068 4FF0FF30 		mov	r0, #-1	@,
 146 006c 0F21     		movs	r1, #15	@,
 147 006e FFF7C7FF 		bl	NVIC_SetPriority	@
1683:cmsis_core/core_cm4.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 148              		.loc 1 1683 0
 149 0072 054B     		ldr	r3, .L9	@ D.7299,
 150 0074 0022     		movs	r2, #0	@ tmp119,
 151 0076 9A60     		str	r2, [r3, #8]	@ tmp119, _7->VAL
1684:cmsis_core/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 152              		.loc 1 1684 0
 153 0078 034B     		ldr	r3, .L9	@ D.7299,
 154 007a 0722     		movs	r2, #7	@ tmp120,
 155 007c 1A60     		str	r2, [r3]	@ tmp120, _8->CTRL
1685:cmsis_core/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1686:cmsis_core/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
1687:cmsis_core/core_cm4.h ****   return (0);                                                  /* Function successful */
 156              		.loc 1 1687 0
 157 007e 0023     		movs	r3, #0	@ D.7297,
 158              	.L8:
1688:cmsis_core/core_cm4.h **** }
 159              		.loc 1 1688 0
 160 0080 1846     		mov	r0, r3	@, <retval>
 161 0082 03B0     		add	sp, sp, #12	@,,
 162              		@ sp needed	@
 163 0084 5DF804FB 		ldr	pc, [sp], #4	@
 164              	.L10:
 165              		.align	2
 166              	.L9:
 167 0088 10E000E0 		.word	-536813552
 168              		.cfi_endproc
 169              	.LFE112:
 171              		.comm	draw_init,15,4
 172              		.align	2
 173              		.global	mydelay
 174              		.thumb
 175              		.thumb_func
 177              	mydelay:
 178              	.LFB116:
 179              		.file 2 "apps/main.c"
   1:apps/main.c   **** /**
   2:apps/main.c   ****   ******************************************************************************
   3:apps/main.c   ****   * @file     main.c
   4:apps/main.c   ****   * @author   Spas Spasov
   5:apps/main.c   ****   * @version  V1.0.0
   6:apps/main.c   ****   * @date     10.2014
   7:apps/main.c   ****   * @brief
   8:apps/main.c   ****   *
   9:apps/main.c   ****   *
  10:apps/main.c   ****   ******************************************************************************
  11:apps/main.c   ****   * @attention
  12:apps/main.c   ****   *
  13:apps/main.c   ****   ******************************************************************************
  14:apps/main.c   ****   */
  15:apps/main.c   **** 
  16:apps/main.c   **** /* Includes ------------------------------------------------------------------*/
  17:apps/main.c   **** #include "chip.h"             			/* Device header			*/
  18:apps/main.c   **** #include "LED.h"
  19:apps/main.c   **** #include "VGA_Out_apps.h"
  20:apps/main.c   **** #include "mspi_apps.h"
  21:apps/main.c   **** #include "Drawing_apps.h"
  22:apps/main.c   **** 
  23:apps/main.c   **** /* Private typedef -----------------------------------------------------------*/
  24:apps/main.c   **** /* None */
  25:apps/main.c   **** 
  26:apps/main.c   **** /* Private define ------------------------------------------------------------*/
  27:apps/main.c   **** 
  28:apps/main.c   **** /* Private macro -------------------------------------------------------------*/
  29:apps/main.c   **** 
  30:apps/main.c   **** /* Private variables ---------------------------------------------------------*/
  31:apps/main.c   **** draw_t draw_init;
  32:apps/main.c   **** 
  33:apps/main.c   **** 
  34:apps/main.c   **** /* Private function prototypes -----------------------------------------------*/
  35:apps/main.c   **** 
  36:apps/main.c   **** /* Public function prototypes ------------------------------------------------*/
  37:apps/main.c   **** 
  38:apps/main.c   **** /* Private functions ---------------------------------------------------------*/
  39:apps/main.c   **** 
  40:apps/main.c   **** /* Public functions ----------------------------------------------------------*/
  41:apps/main.c   **** 
  42:apps/main.c   **** void mydelay(uint32_t delay)
  43:apps/main.c   **** {
 180              		.loc 2 43 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 16
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 008c 84B0     		sub	sp, sp, #16	@,,
 186              		.cfi_def_cfa_offset 16
 187 008e 0190     		str	r0, [sp, #4]	@ delay, delay
  44:apps/main.c   **** uint32_t i;
  45:apps/main.c   **** 
  46:apps/main.c   **** 
  47:apps/main.c   **** 	for(i = 0; i < delay; i++)
 188              		.loc 2 47 0
 189 0090 0023     		movs	r3, #0	@ tmp110,
 190 0092 0393     		str	r3, [sp, #12]	@ tmp110, i
 191 0094 02E0     		b	.L12	@
 192              	.L13:
 193              		.loc 2 47 0 is_stmt 0 discriminator 2
 194 0096 039B     		ldr	r3, [sp, #12]	@ tmp112, i
 195 0098 0133     		adds	r3, r3, #1	@ tmp111, tmp112,
 196 009a 0393     		str	r3, [sp, #12]	@ tmp111, i
 197              	.L12:
 198              		.loc 2 47 0 discriminator 1
 199 009c 039A     		ldr	r2, [sp, #12]	@ tmp113, i
 200 009e 019B     		ldr	r3, [sp, #4]	@ tmp114, delay
 201 00a0 9A42     		cmp	r2, r3	@ tmp113, tmp114
 202 00a2 F8D3     		bcc	.L13	@,
  48:apps/main.c   **** 	{
  49:apps/main.c   **** 
  50:apps/main.c   **** 	}
  51:apps/main.c   **** }
 203              		.loc 2 51 0 is_stmt 1
 204 00a4 04B0     		add	sp, sp, #16	@,,
 205              		@ sp needed	@
 206 00a6 7047     		bx	lr	@
 207              		.cfi_endproc
 208              	.LFE116:
 210              		.align	2
 211              		.global	main
 212              		.thumb
 213              		.thumb_func
 215              	main:
 216              	.LFB117:
  52:apps/main.c   **** 
  53:apps/main.c   **** 
  54:apps/main.c   **** /**
  55:apps/main.c   ****   * @brief  This is a "main()" function of the project.
  56:apps/main.c   ****   * @param  None
  57:apps/main.c   ****   * @retval int
  58:apps/main.c   ****   */
  59:apps/main.c   **** int main( void )
  60:apps/main.c   **** {
 217              		.loc 2 60 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 00a8 08B5     		push	{r3, lr}	@
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
  61:apps/main.c   **** 
  62:apps/main.c   **** 
  63:apps/main.c   **** 	SystemInit();
 225              		.loc 2 63 0
 226 00aa FFF7FEFF 		bl	SystemInit	@
  64:apps/main.c   **** 	SystemCoreClockUpdate();
 227              		.loc 2 64 0
 228 00ae FFF7FEFF 		bl	SystemCoreClockUpdate	@
  65:apps/main.c   **** 
  66:apps/main.c   **** 	LedInit();
 229              		.loc 2 66 0
 230 00b2 FFF7FEFF 		bl	LedInit	@
  67:apps/main.c   **** 
  68:apps/main.c   **** 
  69:apps/main.c   **** //	gDrawALineColour(&draw_init);
  70:apps/main.c   **** //	gDrawAPointColour(&draw_init);
  71:apps/main.c   **** 	StartVGAOut();
 231              		.loc 2 71 0
 232 00b6 FFF7FEFF 		bl	StartVGAOut	@
  72:apps/main.c   **** 
  73:apps/main.c   **** 	SysTick_Config(SystemCoreClock/100);  /* Generate interrupt each 10 ms      */
 233              		.loc 2 73 0
 234 00ba C04B     		ldr	r3, .L16	@ tmp113,
 235 00bc 1A68     		ldr	r2, [r3]	@ SystemCoreClock.0, SystemCoreClock
 236 00be C04B     		ldr	r3, .L16+4	@ tmp115,
 237 00c0 A3FB0213 		umull	r1, r3, r3, r2	@, tmp114, tmp115, SystemCoreClock.0
 238 00c4 5B09     		lsrs	r3, r3, #5	@ D.7300, tmp114,
 239 00c6 1846     		mov	r0, r3	@, D.7300
 240 00c8 FFF7C0FF 		bl	SysTick_Config	@
 241              	.L15:
  74:apps/main.c   **** //	mSpiSart();
  75:apps/main.c   **** 
  76:apps/main.c   **** 	while(1)
  77:apps/main.c   **** 	{
  78:apps/main.c   **** 		mydelay(20000000);
 242              		.loc 2 78 0 discriminator 1
 243 00cc BD48     		ldr	r0, .L16+8	@,
 244 00ce FFF7FEFF 		bl	mydelay	@
  79:apps/main.c   **** 		draw_init.x1 			= 10;
 245              		.loc 2 79 0 discriminator 1
 246 00d2 BD4B     		ldr	r3, .L16+12	@ tmp116,
 247 00d4 0022     		movs	r2, #0	@ tmp118,
 248 00d6 42F00A02 		orr	r2, r2, #10	@ tmp120, tmp119,
 249 00da DA71     		strb	r2, [r3, #7]	@ tmp121, draw_init.x1
 250 00dc 0022     		movs	r2, #0	@ tmp123,
 251 00de 1A72     		strb	r2, [r3, #8]	@ tmp124, draw_init.x1
  80:apps/main.c   **** 		draw_init.y1 			= 10;
 252              		.loc 2 80 0 discriminator 1
 253 00e0 B94A     		ldr	r2, .L16+12	@ tmp125,
 254 00e2 9368     		ldr	r3, [r2, #8]	@ tmp126,
 255 00e4 0A21     		movs	r1, #10	@ tmp127,
 256 00e6 61F31723 		bfi	r3, r1, #8, #16	@ tmp126, tmp127,,
 257 00ea 9360     		str	r3, [r2, #8]	@ tmp126,
  81:apps/main.c   **** 		draw_init.x2_rx 		= 630;
 258              		.loc 2 81 0 discriminator 1
 259 00ec B64B     		ldr	r3, .L16+12	@ tmp128,
 260 00ee 0022     		movs	r2, #0	@ tmp130,
 261 00f0 42F07602 		orr	r2, r2, #118	@ tmp132, tmp131,
 262 00f4 DA72     		strb	r2, [r3, #11]	@ tmp133, draw_init.x2_rx
 263 00f6 0022     		movs	r2, #0	@ tmp135,
 264 00f8 42F00202 		orr	r2, r2, #2	@ tmp137, tmp136,
 265 00fc 1A73     		strb	r2, [r3, #12]	@ tmp138, draw_init.x2_rx
  82:apps/main.c   **** 		draw_init.y2_ry 		= 320;
 266              		.loc 2 82 0 discriminator 1
 267 00fe B24A     		ldr	r2, .L16+12	@ tmp139,
 268 0100 D368     		ldr	r3, [r2, #12]	@ tmp140,
 269 0102 4FF4A071 		mov	r1, #320	@ tmp141,
 270 0106 61F31723 		bfi	r3, r1, #8, #16	@ tmp140, tmp141,,
 271 010a D360     		str	r3, [r2, #12]	@ tmp140,
  83:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 272              		.loc 2 83 0 discriminator 1
 273 010c AE4B     		ldr	r3, .L16+12	@ tmp142,
 274 010e 0022     		movs	r2, #0	@ tmp143,
 275 0110 9A70     		strb	r2, [r3, #2]	@ tmp144, draw_init.function
  84:apps/main.c   **** 		draw_init.colour 		= 0x0F;
 276              		.loc 2 84 0 discriminator 1
 277 0112 AD4B     		ldr	r3, .L16+12	@ tmp145,
 278 0114 0F22     		movs	r2, #15	@ tmp146,
 279 0116 5A70     		strb	r2, [r3, #1]	@ tmp147, draw_init.colour
  85:apps/main.c   **** 		gDrawALineColour(&draw_init);
 280              		.loc 2 85 0 discriminator 1
 281 0118 AB48     		ldr	r0, .L16+12	@,
 282 011a FFF7FEFF 		bl	gDrawALineColour	@
  86:apps/main.c   **** 
  87:apps/main.c   **** 		mydelay(10000000);
 283              		.loc 2 87 0 discriminator 1
 284 011e AB48     		ldr	r0, .L16+16	@,
 285 0120 FFF7FEFF 		bl	mydelay	@
  88:apps/main.c   **** 		draw_init.x1 			= 10;
 286              		.loc 2 88 0 discriminator 1
 287 0124 A84B     		ldr	r3, .L16+12	@ tmp148,
 288 0126 0022     		movs	r2, #0	@ tmp150,
 289 0128 42F00A02 		orr	r2, r2, #10	@ tmp152, tmp151,
 290 012c DA71     		strb	r2, [r3, #7]	@ tmp153, draw_init.x1
 291 012e 0022     		movs	r2, #0	@ tmp155,
 292 0130 1A72     		strb	r2, [r3, #8]	@ tmp156, draw_init.x1
  89:apps/main.c   **** 		draw_init.y1 			= 320;
 293              		.loc 2 89 0 discriminator 1
 294 0132 A54A     		ldr	r2, .L16+12	@ tmp157,
 295 0134 9368     		ldr	r3, [r2, #8]	@ tmp158,
 296 0136 4FF4A071 		mov	r1, #320	@ tmp159,
 297 013a 61F31723 		bfi	r3, r1, #8, #16	@ tmp158, tmp159,,
 298 013e 9360     		str	r3, [r2, #8]	@ tmp158,
  90:apps/main.c   **** 		draw_init.x2_rx 		= 630;
 299              		.loc 2 90 0 discriminator 1
 300 0140 A14B     		ldr	r3, .L16+12	@ tmp160,
 301 0142 0022     		movs	r2, #0	@ tmp162,
 302 0144 42F07602 		orr	r2, r2, #118	@ tmp164, tmp163,
 303 0148 DA72     		strb	r2, [r3, #11]	@ tmp165, draw_init.x2_rx
 304 014a 0022     		movs	r2, #0	@ tmp167,
 305 014c 42F00202 		orr	r2, r2, #2	@ tmp169, tmp168,
 306 0150 1A73     		strb	r2, [r3, #12]	@ tmp170, draw_init.x2_rx
  91:apps/main.c   **** 		draw_init.y2_ry 		= 10;
 307              		.loc 2 91 0 discriminator 1
 308 0152 9D4A     		ldr	r2, .L16+12	@ tmp171,
 309 0154 D368     		ldr	r3, [r2, #12]	@ tmp172,
 310 0156 0A21     		movs	r1, #10	@ tmp173,
 311 0158 61F31723 		bfi	r3, r1, #8, #16	@ tmp172, tmp173,,
 312 015c D360     		str	r3, [r2, #12]	@ tmp172,
  92:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 313              		.loc 2 92 0 discriminator 1
 314 015e 9A4B     		ldr	r3, .L16+12	@ tmp174,
 315 0160 0022     		movs	r2, #0	@ tmp175,
 316 0162 9A70     		strb	r2, [r3, #2]	@ tmp176, draw_init.function
  93:apps/main.c   **** 		draw_init.colour 		= 0x0A;
 317              		.loc 2 93 0 discriminator 1
 318 0164 984B     		ldr	r3, .L16+12	@ tmp177,
 319 0166 0A22     		movs	r2, #10	@ tmp178,
 320 0168 5A70     		strb	r2, [r3, #1]	@ tmp179, draw_init.colour
  94:apps/main.c   **** 		gDrawALineColour(&draw_init);
 321              		.loc 2 94 0 discriminator 1
 322 016a 9748     		ldr	r0, .L16+12	@,
 323 016c FFF7FEFF 		bl	gDrawALineColour	@
  95:apps/main.c   **** #if 1
  96:apps/main.c   **** 		mydelay(10000000);
 324              		.loc 2 96 0 discriminator 1
 325 0170 9648     		ldr	r0, .L16+16	@,
 326 0172 FFF7FEFF 		bl	mydelay	@
  97:apps/main.c   **** 		draw_init.x1 			= 320;
 327              		.loc 2 97 0 discriminator 1
 328 0176 944B     		ldr	r3, .L16+12	@ tmp180,
 329 0178 0022     		movs	r2, #0	@ tmp182,
 330 017a 42F04002 		orr	r2, r2, #64	@ tmp184, tmp183,
 331 017e DA71     		strb	r2, [r3, #7]	@ tmp185, draw_init.x1
 332 0180 0022     		movs	r2, #0	@ tmp187,
 333 0182 42F00102 		orr	r2, r2, #1	@ tmp189, tmp188,
 334 0186 1A72     		strb	r2, [r3, #8]	@ tmp190, draw_init.x1
  98:apps/main.c   **** 		draw_init.y1 			= 175;
 335              		.loc 2 98 0 discriminator 1
 336 0188 8F4A     		ldr	r2, .L16+12	@ tmp191,
 337 018a 9368     		ldr	r3, [r2, #8]	@ tmp192,
 338 018c AF21     		movs	r1, #175	@ tmp193,
 339 018e 61F31723 		bfi	r3, r1, #8, #16	@ tmp192, tmp193,,
 340 0192 9360     		str	r3, [r2, #8]	@ tmp192,
  99:apps/main.c   **** 		draw_init.x2_rx 		= 220;
 341              		.loc 2 99 0 discriminator 1
 342 0194 8C4B     		ldr	r3, .L16+12	@ tmp194,
 343 0196 0022     		movs	r2, #0	@ tmp196,
 344 0198 62F02302 		orn	r2, r2, #35	@ tmp198, tmp197,
 345 019c DA72     		strb	r2, [r3, #11]	@ tmp199, draw_init.x2_rx
 346 019e 0022     		movs	r2, #0	@ tmp201,
 347 01a0 1A73     		strb	r2, [r3, #12]	@ tmp202, draw_init.x2_rx
 100:apps/main.c   **** 		draw_init.y2_ry 		= 100;
 348              		.loc 2 100 0 discriminator 1
 349 01a2 894A     		ldr	r2, .L16+12	@ tmp203,
 350 01a4 D368     		ldr	r3, [r2, #12]	@ tmp204,
 351 01a6 6421     		movs	r1, #100	@ tmp205,
 352 01a8 61F31723 		bfi	r3, r1, #8, #16	@ tmp204, tmp205,,
 353 01ac D360     		str	r3, [r2, #12]	@ tmp204,
 101:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 354              		.loc 2 101 0 discriminator 1
 355 01ae 864B     		ldr	r3, .L16+12	@ tmp206,
 356 01b0 0022     		movs	r2, #0	@ tmp207,
 357 01b2 9A70     		strb	r2, [r3, #2]	@ tmp208, draw_init.function
 102:apps/main.c   **** 		draw_init.type			= 1;
 358              		.loc 2 102 0 discriminator 1
 359 01b4 844B     		ldr	r3, .L16+12	@ tmp209,
 360 01b6 0122     		movs	r2, #1	@ tmp210,
 361 01b8 DA70     		strb	r2, [r3, #3]	@ tmp211, draw_init.type
 103:apps/main.c   **** 		draw_init.colour 		= 0x0D;
 362              		.loc 2 103 0 discriminator 1
 363 01ba 834B     		ldr	r3, .L16+12	@ tmp212,
 364 01bc 0D22     		movs	r2, #13	@ tmp213,
 365 01be 5A70     		strb	r2, [r3, #1]	@ tmp214, draw_init.colour
 104:apps/main.c   **** 		gDrawAEllipseColour(&draw_init);
 366              		.loc 2 104 0 discriminator 1
 367 01c0 8148     		ldr	r0, .L16+12	@,
 368 01c2 FFF7FEFF 		bl	gDrawAEllipseColour	@
 105:apps/main.c   **** 
 106:apps/main.c   **** 		mydelay(10000000);
 369              		.loc 2 106 0 discriminator 1
 370 01c6 8148     		ldr	r0, .L16+16	@,
 371 01c8 FFF7FEFF 		bl	mydelay	@
 107:apps/main.c   **** 		draw_init.x1 			= 320;
 372              		.loc 2 107 0 discriminator 1
 373 01cc 7E4B     		ldr	r3, .L16+12	@ tmp215,
 374 01ce 0022     		movs	r2, #0	@ tmp217,
 375 01d0 42F04002 		orr	r2, r2, #64	@ tmp219, tmp218,
 376 01d4 DA71     		strb	r2, [r3, #7]	@ tmp220, draw_init.x1
 377 01d6 0022     		movs	r2, #0	@ tmp222,
 378 01d8 42F00102 		orr	r2, r2, #1	@ tmp224, tmp223,
 379 01dc 1A72     		strb	r2, [r3, #8]	@ tmp225, draw_init.x1
 108:apps/main.c   **** 		draw_init.y1 			= 175;
 380              		.loc 2 108 0 discriminator 1
 381 01de 7A4A     		ldr	r2, .L16+12	@ tmp226,
 382 01e0 9368     		ldr	r3, [r2, #8]	@ tmp227,
 383 01e2 AF21     		movs	r1, #175	@ tmp228,
 384 01e4 61F31723 		bfi	r3, r1, #8, #16	@ tmp227, tmp228,,
 385 01e8 9360     		str	r3, [r2, #8]	@ tmp227,
 109:apps/main.c   **** 		draw_init.x2_rx 		= 50;
 386              		.loc 2 109 0 discriminator 1
 387 01ea 774B     		ldr	r3, .L16+12	@ tmp229,
 388 01ec 0022     		movs	r2, #0	@ tmp231,
 389 01ee 42F03202 		orr	r2, r2, #50	@ tmp233, tmp232,
 390 01f2 DA72     		strb	r2, [r3, #11]	@ tmp234, draw_init.x2_rx
 391 01f4 0022     		movs	r2, #0	@ tmp236,
 392 01f6 1A73     		strb	r2, [r3, #12]	@ tmp237, draw_init.x2_rx
 110:apps/main.c   **** 		draw_init.y2_ry 		= 50;
 393              		.loc 2 110 0 discriminator 1
 394 01f8 734A     		ldr	r2, .L16+12	@ tmp238,
 395 01fa D368     		ldr	r3, [r2, #12]	@ tmp239,
 396 01fc 3221     		movs	r1, #50	@ tmp240,
 397 01fe 61F31723 		bfi	r3, r1, #8, #16	@ tmp239, tmp240,,
 398 0202 D360     		str	r3, [r2, #12]	@ tmp239,
 111:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 399              		.loc 2 111 0 discriminator 1
 400 0204 704B     		ldr	r3, .L16+12	@ tmp241,
 401 0206 0022     		movs	r2, #0	@ tmp242,
 402 0208 9A70     		strb	r2, [r3, #2]	@ tmp243, draw_init.function
 112:apps/main.c   **** 		draw_init.type			= 1;
 403              		.loc 2 112 0 discriminator 1
 404 020a 6F4B     		ldr	r3, .L16+12	@ tmp244,
 405 020c 0122     		movs	r2, #1	@ tmp245,
 406 020e DA70     		strb	r2, [r3, #3]	@ tmp246, draw_init.type
 113:apps/main.c   **** 		draw_init.colour 		= 0x03;
 407              		.loc 2 113 0 discriminator 1
 408 0210 6D4B     		ldr	r3, .L16+12	@ tmp247,
 409 0212 0322     		movs	r2, #3	@ tmp248,
 410 0214 5A70     		strb	r2, [r3, #1]	@ tmp249, draw_init.colour
 114:apps/main.c   **** 		gDrawAEllipseColour(&draw_init);
 411              		.loc 2 114 0 discriminator 1
 412 0216 6C48     		ldr	r0, .L16+12	@,
 413 0218 FFF7FEFF 		bl	gDrawAEllipseColour	@
 115:apps/main.c   **** #endif
 116:apps/main.c   **** 		mydelay(10000000);
 414              		.loc 2 116 0 discriminator 1
 415 021c 6B48     		ldr	r0, .L16+16	@,
 416 021e FFF7FEFF 		bl	mydelay	@
 117:apps/main.c   **** 		draw_init.x1 			= 5;
 417              		.loc 2 117 0 discriminator 1
 418 0222 694B     		ldr	r3, .L16+12	@ tmp250,
 419 0224 0022     		movs	r2, #0	@ tmp252,
 420 0226 42F00502 		orr	r2, r2, #5	@ tmp254, tmp253,
 421 022a DA71     		strb	r2, [r3, #7]	@ tmp255, draw_init.x1
 422 022c 0022     		movs	r2, #0	@ tmp257,
 423 022e 1A72     		strb	r2, [r3, #8]	@ tmp258, draw_init.x1
 118:apps/main.c   **** 		draw_init.y1 			= 5;
 424              		.loc 2 118 0 discriminator 1
 425 0230 654A     		ldr	r2, .L16+12	@ tmp259,
 426 0232 9368     		ldr	r3, [r2, #8]	@ tmp260,
 427 0234 0521     		movs	r1, #5	@ tmp261,
 428 0236 61F31723 		bfi	r3, r1, #8, #16	@ tmp260, tmp261,,
 429 023a 9360     		str	r3, [r2, #8]	@ tmp260,
 119:apps/main.c   **** 		draw_init.x2_rx 		= 635;
 430              		.loc 2 119 0 discriminator 1
 431 023c 624B     		ldr	r3, .L16+12	@ tmp262,
 432 023e 0022     		movs	r2, #0	@ tmp264,
 433 0240 42F07B02 		orr	r2, r2, #123	@ tmp266, tmp265,
 434 0244 DA72     		strb	r2, [r3, #11]	@ tmp267, draw_init.x2_rx
 435 0246 0022     		movs	r2, #0	@ tmp269,
 436 0248 42F00202 		orr	r2, r2, #2	@ tmp271, tmp270,
 437 024c 1A73     		strb	r2, [r3, #12]	@ tmp272, draw_init.x2_rx
 120:apps/main.c   **** 		draw_init.y2_ry 		= 315;
 438              		.loc 2 120 0 discriminator 1
 439 024e 5E4A     		ldr	r2, .L16+12	@ tmp273,
 440 0250 D368     		ldr	r3, [r2, #12]	@ tmp274,
 441 0252 40F23B11 		movw	r1, #315	@ tmp275,
 442 0256 61F31723 		bfi	r3, r1, #8, #16	@ tmp274, tmp275,,
 443 025a D360     		str	r3, [r2, #12]	@ tmp274,
 121:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 444              		.loc 2 121 0 discriminator 1
 445 025c 5A4B     		ldr	r3, .L16+12	@ tmp276,
 446 025e 0022     		movs	r2, #0	@ tmp277,
 447 0260 9A70     		strb	r2, [r3, #2]	@ tmp278, draw_init.function
 122:apps/main.c   **** 		draw_init.type			= 0;
 448              		.loc 2 122 0 discriminator 1
 449 0262 594B     		ldr	r3, .L16+12	@ tmp279,
 450 0264 0022     		movs	r2, #0	@ tmp280,
 451 0266 DA70     		strb	r2, [r3, #3]	@ tmp281, draw_init.type
 123:apps/main.c   **** 		draw_init.colour 		= 0x0E;
 452              		.loc 2 123 0 discriminator 1
 453 0268 574B     		ldr	r3, .L16+12	@ tmp282,
 454 026a 0E22     		movs	r2, #14	@ tmp283,
 455 026c 5A70     		strb	r2, [r3, #1]	@ tmp284, draw_init.colour
 124:apps/main.c   **** 		gDrawARectangleColour(&draw_init);
 456              		.loc 2 124 0 discriminator 1
 457 026e 5648     		ldr	r0, .L16+12	@,
 458 0270 FFF7FEFF 		bl	gDrawARectangleColour	@
 125:apps/main.c   **** 
 126:apps/main.c   **** 		mydelay(10000000);
 459              		.loc 2 126 0 discriminator 1
 460 0274 5548     		ldr	r0, .L16+16	@,
 461 0276 FFF7FEFF 		bl	mydelay	@
 127:apps/main.c   **** 		draw_init.x1 			= 50;
 462              		.loc 2 127 0 discriminator 1
 463 027a 534B     		ldr	r3, .L16+12	@ tmp285,
 464 027c 0022     		movs	r2, #0	@ tmp287,
 465 027e 42F03202 		orr	r2, r2, #50	@ tmp289, tmp288,
 466 0282 DA71     		strb	r2, [r3, #7]	@ tmp290, draw_init.x1
 467 0284 0022     		movs	r2, #0	@ tmp292,
 468 0286 1A72     		strb	r2, [r3, #8]	@ tmp293, draw_init.x1
 128:apps/main.c   **** 		draw_init.y1 			= 50;
 469              		.loc 2 128 0 discriminator 1
 470 0288 4F4A     		ldr	r2, .L16+12	@ tmp294,
 471 028a 9368     		ldr	r3, [r2, #8]	@ tmp295,
 472 028c 3221     		movs	r1, #50	@ tmp296,
 473 028e 61F31723 		bfi	r3, r1, #8, #16	@ tmp295, tmp296,,
 474 0292 9360     		str	r3, [r2, #8]	@ tmp295,
 129:apps/main.c   **** 		draw_init.x2_rx 		= 400;
 475              		.loc 2 129 0 discriminator 1
 476 0294 4C4B     		ldr	r3, .L16+12	@ tmp297,
 477 0296 0022     		movs	r2, #0	@ tmp299,
 478 0298 62F06F02 		orn	r2, r2, #111	@ tmp301, tmp300,
 479 029c DA72     		strb	r2, [r3, #11]	@ tmp302, draw_init.x2_rx
 480 029e 0022     		movs	r2, #0	@ tmp304,
 481 02a0 42F00102 		orr	r2, r2, #1	@ tmp306, tmp305,
 482 02a4 1A73     		strb	r2, [r3, #12]	@ tmp307, draw_init.x2_rx
 130:apps/main.c   **** 		draw_init.y2_ry 		= 200;
 483              		.loc 2 130 0 discriminator 1
 484 02a6 484A     		ldr	r2, .L16+12	@ tmp308,
 485 02a8 D368     		ldr	r3, [r2, #12]	@ tmp309,
 486 02aa C821     		movs	r1, #200	@ tmp310,
 487 02ac 61F31723 		bfi	r3, r1, #8, #16	@ tmp309, tmp310,,
 488 02b0 D360     		str	r3, [r2, #12]	@ tmp309,
 131:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 489              		.loc 2 131 0 discriminator 1
 490 02b2 454B     		ldr	r3, .L16+12	@ tmp311,
 491 02b4 0022     		movs	r2, #0	@ tmp312,
 492 02b6 9A70     		strb	r2, [r3, #2]	@ tmp313, draw_init.function
 132:apps/main.c   **** 		draw_init.type			= 0;
 493              		.loc 2 132 0 discriminator 1
 494 02b8 434B     		ldr	r3, .L16+12	@ tmp314,
 495 02ba 0022     		movs	r2, #0	@ tmp315,
 496 02bc DA70     		strb	r2, [r3, #3]	@ tmp316, draw_init.type
 133:apps/main.c   **** 		draw_init.colour 		= 0x04;
 497              		.loc 2 133 0 discriminator 1
 498 02be 424B     		ldr	r3, .L16+12	@ tmp317,
 499 02c0 0422     		movs	r2, #4	@ tmp318,
 500 02c2 5A70     		strb	r2, [r3, #1]	@ tmp319, draw_init.colour
 134:apps/main.c   **** 		gDrawARectangleColour(&draw_init);
 501              		.loc 2 134 0 discriminator 1
 502 02c4 4048     		ldr	r0, .L16+12	@,
 503 02c6 FFF7FEFF 		bl	gDrawARectangleColour	@
 135:apps/main.c   **** 
 136:apps/main.c   **** 		mydelay(10000000);
 504              		.loc 2 136 0 discriminator 1
 505 02ca 4048     		ldr	r0, .L16+16	@,
 506 02cc FFF7FEFF 		bl	mydelay	@
 137:apps/main.c   **** 		draw_init.x1 			= 52;
 507              		.loc 2 137 0 discriminator 1
 508 02d0 3D4B     		ldr	r3, .L16+12	@ tmp320,
 509 02d2 0022     		movs	r2, #0	@ tmp322,
 510 02d4 42F03402 		orr	r2, r2, #52	@ tmp324, tmp323,
 511 02d8 DA71     		strb	r2, [r3, #7]	@ tmp325, draw_init.x1
 512 02da 0022     		movs	r2, #0	@ tmp327,
 513 02dc 1A72     		strb	r2, [r3, #8]	@ tmp328, draw_init.x1
 138:apps/main.c   **** 		draw_init.y1 			= 52;
 514              		.loc 2 138 0 discriminator 1
 515 02de 3A4A     		ldr	r2, .L16+12	@ tmp329,
 516 02e0 9368     		ldr	r3, [r2, #8]	@ tmp330,
 517 02e2 3421     		movs	r1, #52	@ tmp331,
 518 02e4 61F31723 		bfi	r3, r1, #8, #16	@ tmp330, tmp331,,
 519 02e8 9360     		str	r3, [r2, #8]	@ tmp330,
 139:apps/main.c   **** 		draw_init.x2_rx 		= 0;
 520              		.loc 2 139 0 discriminator 1
 521 02ea 374B     		ldr	r3, .L16+12	@ tmp332,
 522 02ec 0022     		movs	r2, #0	@ tmp334,
 523 02ee DA72     		strb	r2, [r3, #11]	@ tmp335, draw_init.x2_rx
 524 02f0 0022     		movs	r2, #0	@ tmp337,
 525 02f2 1A73     		strb	r2, [r3, #12]	@ tmp338, draw_init.x2_rx
 140:apps/main.c   **** 		draw_init.y2_ry 		= 0;
 526              		.loc 2 140 0 discriminator 1
 527 02f4 344A     		ldr	r2, .L16+12	@ tmp339,
 528 02f6 D368     		ldr	r3, [r2, #12]	@ tmp340,
 529 02f8 6FF31723 		bfc	r3, #8, #16	@ tmp340,,
 530 02fc D360     		str	r3, [r2, #12]	@ tmp340,
 141:apps/main.c   **** 		draw_init.ascii_sym		= 'a';
 531              		.loc 2 141 0 discriminator 1
 532 02fe 324B     		ldr	r3, .L16+12	@ tmp341,
 533 0300 6122     		movs	r2, #97	@ tmp342,
 534 0302 1A71     		strb	r2, [r3, #4]	@ tmp343, draw_init.ascii_sym
 142:apps/main.c   **** 		draw_init.ascii_font	= 0;
 535              		.loc 2 142 0 discriminator 1
 536 0304 304B     		ldr	r3, .L16+12	@ tmp344,
 537 0306 0022     		movs	r2, #0	@ tmp345,
 538 0308 5A71     		strb	r2, [r3, #5]	@ tmp346, draw_init.ascii_font
 143:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 539              		.loc 2 143 0 discriminator 1
 540 030a 2F4B     		ldr	r3, .L16+12	@ tmp347,
 541 030c 0022     		movs	r2, #0	@ tmp348,
 542 030e 9A70     		strb	r2, [r3, #2]	@ tmp349, draw_init.function
 144:apps/main.c   **** 		draw_init.type			= 0;
 543              		.loc 2 144 0 discriminator 1
 544 0310 2D4B     		ldr	r3, .L16+12	@ tmp350,
 545 0312 0022     		movs	r2, #0	@ tmp351,
 546 0314 DA70     		strb	r2, [r3, #3]	@ tmp352, draw_init.type
 145:apps/main.c   **** 		draw_init.colour 		= 0x0F;
 547              		.loc 2 145 0 discriminator 1
 548 0316 2C4B     		ldr	r3, .L16+12	@ tmp353,
 549 0318 0F22     		movs	r2, #15	@ tmp354,
 550 031a 5A70     		strb	r2, [r3, #1]	@ tmp355, draw_init.colour
 146:apps/main.c   **** 		gDrawAAsciiSymbolColour(&draw_init);
 551              		.loc 2 146 0 discriminator 1
 552 031c 2A48     		ldr	r0, .L16+12	@,
 553 031e FFF7FEFF 		bl	gDrawAAsciiSymbolColour	@
 147:apps/main.c   **** 
 148:apps/main.c   **** 		draw_init.x1 			= 60;
 554              		.loc 2 148 0 discriminator 1
 555 0322 294B     		ldr	r3, .L16+12	@ tmp356,
 556 0324 0022     		movs	r2, #0	@ tmp358,
 557 0326 42F03C02 		orr	r2, r2, #60	@ tmp360, tmp359,
 558 032a DA71     		strb	r2, [r3, #7]	@ tmp361, draw_init.x1
 559 032c 0022     		movs	r2, #0	@ tmp363,
 560 032e 1A72     		strb	r2, [r3, #8]	@ tmp364, draw_init.x1
 149:apps/main.c   **** 		draw_init.y1 			= 52;
 561              		.loc 2 149 0 discriminator 1
 562 0330 254A     		ldr	r2, .L16+12	@ tmp365,
 563 0332 9368     		ldr	r3, [r2, #8]	@ tmp366,
 564 0334 3421     		movs	r1, #52	@ tmp367,
 565 0336 61F31723 		bfi	r3, r1, #8, #16	@ tmp366, tmp367,,
 566 033a 9360     		str	r3, [r2, #8]	@ tmp366,
 150:apps/main.c   **** 		draw_init.x2_rx 		= 0;
 567              		.loc 2 150 0 discriminator 1
 568 033c 224B     		ldr	r3, .L16+12	@ tmp368,
 569 033e 0022     		movs	r2, #0	@ tmp370,
 570 0340 DA72     		strb	r2, [r3, #11]	@ tmp371, draw_init.x2_rx
 571 0342 0022     		movs	r2, #0	@ tmp373,
 572 0344 1A73     		strb	r2, [r3, #12]	@ tmp374, draw_init.x2_rx
 151:apps/main.c   **** 		draw_init.y2_ry 		= 0;
 573              		.loc 2 151 0 discriminator 1
 574 0346 204A     		ldr	r2, .L16+12	@ tmp375,
 575 0348 D368     		ldr	r3, [r2, #12]	@ tmp376,
 576 034a 6FF31723 		bfc	r3, #8, #16	@ tmp376,,
 577 034e D360     		str	r3, [r2, #12]	@ tmp376,
 152:apps/main.c   **** 		draw_init.ascii_sym		= 'B';
 578              		.loc 2 152 0 discriminator 1
 579 0350 1D4B     		ldr	r3, .L16+12	@ tmp377,
 580 0352 4222     		movs	r2, #66	@ tmp378,
 581 0354 1A71     		strb	r2, [r3, #4]	@ tmp379, draw_init.ascii_sym
 153:apps/main.c   **** 		draw_init.ascii_font	= 1;
 582              		.loc 2 153 0 discriminator 1
 583 0356 1C4B     		ldr	r3, .L16+12	@ tmp380,
 584 0358 0122     		movs	r2, #1	@ tmp381,
 585 035a 5A71     		strb	r2, [r3, #5]	@ tmp382, draw_init.ascii_font
 154:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 586              		.loc 2 154 0 discriminator 1
 587 035c 1A4B     		ldr	r3, .L16+12	@ tmp383,
 588 035e 0022     		movs	r2, #0	@ tmp384,
 589 0360 9A70     		strb	r2, [r3, #2]	@ tmp385, draw_init.function
 155:apps/main.c   **** 		draw_init.type			= 0;
 590              		.loc 2 155 0 discriminator 1
 591 0362 194B     		ldr	r3, .L16+12	@ tmp386,
 592 0364 0022     		movs	r2, #0	@ tmp387,
 593 0366 DA70     		strb	r2, [r3, #3]	@ tmp388, draw_init.type
 156:apps/main.c   **** 		draw_init.colour 		= 0x0E;
 594              		.loc 2 156 0 discriminator 1
 595 0368 174B     		ldr	r3, .L16+12	@ tmp389,
 596 036a 0E22     		movs	r2, #14	@ tmp390,
 597 036c 5A70     		strb	r2, [r3, #1]	@ tmp391, draw_init.colour
 157:apps/main.c   **** 		gDrawAAsciiSymbolColour(&draw_init);
 598              		.loc 2 157 0 discriminator 1
 599 036e 1648     		ldr	r0, .L16+12	@,
 600 0370 FFF7FEFF 		bl	gDrawAAsciiSymbolColour	@
 158:apps/main.c   **** 
 159:apps/main.c   **** 		draw_init.x1 			= 68;
 601              		.loc 2 159 0 discriminator 1
 602 0374 144B     		ldr	r3, .L16+12	@ tmp392,
 603 0376 0022     		movs	r2, #0	@ tmp394,
 604 0378 42F04402 		orr	r2, r2, #68	@ tmp396, tmp395,
 605 037c DA71     		strb	r2, [r3, #7]	@ tmp397, draw_init.x1
 606 037e 0022     		movs	r2, #0	@ tmp399,
 607 0380 1A72     		strb	r2, [r3, #8]	@ tmp400, draw_init.x1
 160:apps/main.c   **** 		draw_init.y1 			= 52;
 608              		.loc 2 160 0 discriminator 1
 609 0382 114A     		ldr	r2, .L16+12	@ tmp401,
 610 0384 9368     		ldr	r3, [r2, #8]	@ tmp402,
 611 0386 3421     		movs	r1, #52	@ tmp403,
 612 0388 61F31723 		bfi	r3, r1, #8, #16	@ tmp402, tmp403,,
 613 038c 9360     		str	r3, [r2, #8]	@ tmp402,
 161:apps/main.c   **** 		draw_init.x2_rx 		= 0;
 614              		.loc 2 161 0 discriminator 1
 615 038e 0E4B     		ldr	r3, .L16+12	@ tmp404,
 616 0390 0022     		movs	r2, #0	@ tmp406,
 617 0392 DA72     		strb	r2, [r3, #11]	@ tmp407, draw_init.x2_rx
 618 0394 0022     		movs	r2, #0	@ tmp409,
 619 0396 1A73     		strb	r2, [r3, #12]	@ tmp410, draw_init.x2_rx
 162:apps/main.c   **** 		draw_init.y2_ry 		= 0;
 620              		.loc 2 162 0 discriminator 1
 621 0398 0B4A     		ldr	r2, .L16+12	@ tmp411,
 622 039a D368     		ldr	r3, [r2, #12]	@ tmp412,
 623 039c 6FF31723 		bfc	r3, #8, #16	@ tmp412,,
 624 03a0 D360     		str	r3, [r2, #12]	@ tmp412,
 163:apps/main.c   **** 		draw_init.ascii_sym		= 'c';
 625              		.loc 2 163 0 discriminator 1
 626 03a2 094B     		ldr	r3, .L16+12	@ tmp413,
 627 03a4 6322     		movs	r2, #99	@ tmp414,
 628 03a6 1A71     		strb	r2, [r3, #4]	@ tmp415, draw_init.ascii_sym
 164:apps/main.c   **** 		draw_init.ascii_font	= 0;
 629              		.loc 2 164 0 discriminator 1
 630 03a8 074B     		ldr	r3, .L16+12	@ tmp416,
 631 03aa 0022     		movs	r2, #0	@ tmp417,
 632 03ac 5A71     		strb	r2, [r3, #5]	@ tmp418, draw_init.ascii_font
 165:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 633              		.loc 2 165 0 discriminator 1
 634 03ae 064B     		ldr	r3, .L16+12	@ tmp419,
 635 03b0 0022     		movs	r2, #0	@ tmp420,
 636 03b2 9A70     		strb	r2, [r3, #2]	@ tmp421, draw_init.function
 166:apps/main.c   **** 		draw_init.type			= 0;
 637              		.loc 2 166 0 discriminator 1
 638 03b4 044B     		ldr	r3, .L16+12	@ tmp422,
 639 03b6 0022     		movs	r2, #0	@ tmp423,
 640 03b8 DA70     		strb	r2, [r3, #3]	@ tmp424, draw_init.type
 641 03ba 09E0     		b	.L17	@
 642              	.L18:
 643              		.align	2
 644              	.L16:
 645 03bc 00000000 		.word	SystemCoreClock
 646 03c0 1F85EB51 		.word	1374389535
 647 03c4 002D3101 		.word	20000000
 648 03c8 00000000 		.word	draw_init
 649 03cc 80969800 		.word	10000000
 650              	.L17:
 167:apps/main.c   **** 		draw_init.colour 		= 0x0D;
 651              		.loc 2 167 0 discriminator 1
 652 03d0 8D4B     		ldr	r3, .L19	@ tmp425,
 653 03d2 0D22     		movs	r2, #13	@ tmp426,
 654 03d4 5A70     		strb	r2, [r3, #1]	@ tmp427, draw_init.colour
 168:apps/main.c   **** 		gDrawAAsciiSymbolColour(&draw_init);
 655              		.loc 2 168 0 discriminator 1
 656 03d6 8C48     		ldr	r0, .L19	@,
 657 03d8 FFF7FEFF 		bl	gDrawAAsciiSymbolColour	@
 169:apps/main.c   **** 
 170:apps/main.c   **** 		draw_init.x1 			= 76;
 658              		.loc 2 170 0 discriminator 1
 659 03dc 8A4B     		ldr	r3, .L19	@ tmp428,
 660 03de 0022     		movs	r2, #0	@ tmp430,
 661 03e0 42F04C02 		orr	r2, r2, #76	@ tmp432, tmp431,
 662 03e4 DA71     		strb	r2, [r3, #7]	@ tmp433, draw_init.x1
 663 03e6 0022     		movs	r2, #0	@ tmp435,
 664 03e8 1A72     		strb	r2, [r3, #8]	@ tmp436, draw_init.x1
 171:apps/main.c   **** 		draw_init.y1 			= 52;
 665              		.loc 2 171 0 discriminator 1
 666 03ea 874A     		ldr	r2, .L19	@ tmp437,
 667 03ec 9368     		ldr	r3, [r2, #8]	@ tmp438,
 668 03ee 3421     		movs	r1, #52	@ tmp439,
 669 03f0 61F31723 		bfi	r3, r1, #8, #16	@ tmp438, tmp439,,
 670 03f4 9360     		str	r3, [r2, #8]	@ tmp438,
 172:apps/main.c   **** 		draw_init.x2_rx 		= 0;
 671              		.loc 2 172 0 discriminator 1
 672 03f6 844B     		ldr	r3, .L19	@ tmp440,
 673 03f8 0022     		movs	r2, #0	@ tmp442,
 674 03fa DA72     		strb	r2, [r3, #11]	@ tmp443, draw_init.x2_rx
 675 03fc 0022     		movs	r2, #0	@ tmp445,
 676 03fe 1A73     		strb	r2, [r3, #12]	@ tmp446, draw_init.x2_rx
 173:apps/main.c   **** 		draw_init.y2_ry 		= 0;
 677              		.loc 2 173 0 discriminator 1
 678 0400 814A     		ldr	r2, .L19	@ tmp447,
 679 0402 D368     		ldr	r3, [r2, #12]	@ tmp448,
 680 0404 6FF31723 		bfc	r3, #8, #16	@ tmp448,,
 681 0408 D360     		str	r3, [r2, #12]	@ tmp448,
 174:apps/main.c   **** 		draw_init.ascii_sym		= 'D';
 682              		.loc 2 174 0 discriminator 1
 683 040a 7F4B     		ldr	r3, .L19	@ tmp449,
 684 040c 4422     		movs	r2, #68	@ tmp450,
 685 040e 1A71     		strb	r2, [r3, #4]	@ tmp451, draw_init.ascii_sym
 175:apps/main.c   **** 		draw_init.ascii_font	= 1;
 686              		.loc 2 175 0 discriminator 1
 687 0410 7D4B     		ldr	r3, .L19	@ tmp452,
 688 0412 0122     		movs	r2, #1	@ tmp453,
 689 0414 5A71     		strb	r2, [r3, #5]	@ tmp454, draw_init.ascii_font
 176:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 690              		.loc 2 176 0 discriminator 1
 691 0416 7C4B     		ldr	r3, .L19	@ tmp455,
 692 0418 0022     		movs	r2, #0	@ tmp456,
 693 041a 9A70     		strb	r2, [r3, #2]	@ tmp457, draw_init.function
 177:apps/main.c   **** 		draw_init.type			= 0;
 694              		.loc 2 177 0 discriminator 1
 695 041c 7A4B     		ldr	r3, .L19	@ tmp458,
 696 041e 0022     		movs	r2, #0	@ tmp459,
 697 0420 DA70     		strb	r2, [r3, #3]	@ tmp460, draw_init.type
 178:apps/main.c   **** 		draw_init.colour 		= 0x0C;
 698              		.loc 2 178 0 discriminator 1
 699 0422 794B     		ldr	r3, .L19	@ tmp461,
 700 0424 0C22     		movs	r2, #12	@ tmp462,
 701 0426 5A70     		strb	r2, [r3, #1]	@ tmp463, draw_init.colour
 179:apps/main.c   **** 		gDrawAAsciiSymbolColour(&draw_init);
 702              		.loc 2 179 0 discriminator 1
 703 0428 7748     		ldr	r0, .L19	@,
 704 042a FFF7FEFF 		bl	gDrawAAsciiSymbolColour	@
 180:apps/main.c   **** 
 181:apps/main.c   **** 		draw_init.x1 			= 84;
 705              		.loc 2 181 0 discriminator 1
 706 042e 764B     		ldr	r3, .L19	@ tmp464,
 707 0430 0022     		movs	r2, #0	@ tmp466,
 708 0432 42F05402 		orr	r2, r2, #84	@ tmp468, tmp467,
 709 0436 DA71     		strb	r2, [r3, #7]	@ tmp469, draw_init.x1
 710 0438 0022     		movs	r2, #0	@ tmp471,
 711 043a 1A72     		strb	r2, [r3, #8]	@ tmp472, draw_init.x1
 182:apps/main.c   **** 		draw_init.y1 			= 52;
 712              		.loc 2 182 0 discriminator 1
 713 043c 724A     		ldr	r2, .L19	@ tmp473,
 714 043e 9368     		ldr	r3, [r2, #8]	@ tmp474,
 715 0440 3421     		movs	r1, #52	@ tmp475,
 716 0442 61F31723 		bfi	r3, r1, #8, #16	@ tmp474, tmp475,,
 717 0446 9360     		str	r3, [r2, #8]	@ tmp474,
 183:apps/main.c   **** 		draw_init.x2_rx 		= 0;
 718              		.loc 2 183 0 discriminator 1
 719 0448 6F4B     		ldr	r3, .L19	@ tmp476,
 720 044a 0022     		movs	r2, #0	@ tmp478,
 721 044c DA72     		strb	r2, [r3, #11]	@ tmp479, draw_init.x2_rx
 722 044e 0022     		movs	r2, #0	@ tmp481,
 723 0450 1A73     		strb	r2, [r3, #12]	@ tmp482, draw_init.x2_rx
 184:apps/main.c   **** 		draw_init.y2_ry 		= 0;
 724              		.loc 2 184 0 discriminator 1
 725 0452 6D4A     		ldr	r2, .L19	@ tmp483,
 726 0454 D368     		ldr	r3, [r2, #12]	@ tmp484,
 727 0456 6FF31723 		bfc	r3, #8, #16	@ tmp484,,
 728 045a D360     		str	r3, [r2, #12]	@ tmp484,
 185:apps/main.c   **** 		draw_init.ascii_sym		= 'e';
 729              		.loc 2 185 0 discriminator 1
 730 045c 6A4B     		ldr	r3, .L19	@ tmp485,
 731 045e 6522     		movs	r2, #101	@ tmp486,
 732 0460 1A71     		strb	r2, [r3, #4]	@ tmp487, draw_init.ascii_sym
 186:apps/main.c   **** 		draw_init.ascii_font	= 0;
 733              		.loc 2 186 0 discriminator 1
 734 0462 694B     		ldr	r3, .L19	@ tmp488,
 735 0464 0022     		movs	r2, #0	@ tmp489,
 736 0466 5A71     		strb	r2, [r3, #5]	@ tmp490, draw_init.ascii_font
 187:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 737              		.loc 2 187 0 discriminator 1
 738 0468 674B     		ldr	r3, .L19	@ tmp491,
 739 046a 0022     		movs	r2, #0	@ tmp492,
 740 046c 9A70     		strb	r2, [r3, #2]	@ tmp493, draw_init.function
 188:apps/main.c   **** 		draw_init.type			= 0;
 741              		.loc 2 188 0 discriminator 1
 742 046e 664B     		ldr	r3, .L19	@ tmp494,
 743 0470 0022     		movs	r2, #0	@ tmp495,
 744 0472 DA70     		strb	r2, [r3, #3]	@ tmp496, draw_init.type
 189:apps/main.c   **** 		draw_init.colour 		= 0x0B;
 745              		.loc 2 189 0 discriminator 1
 746 0474 644B     		ldr	r3, .L19	@ tmp497,
 747 0476 0B22     		movs	r2, #11	@ tmp498,
 748 0478 5A70     		strb	r2, [r3, #1]	@ tmp499, draw_init.colour
 190:apps/main.c   **** 		gDrawAAsciiSymbolColour(&draw_init);
 749              		.loc 2 190 0 discriminator 1
 750 047a 6348     		ldr	r0, .L19	@,
 751 047c FFF7FEFF 		bl	gDrawAAsciiSymbolColour	@
 191:apps/main.c   **** 
 192:apps/main.c   **** 		draw_init.x1 			= 92;
 752              		.loc 2 192 0 discriminator 1
 753 0480 614B     		ldr	r3, .L19	@ tmp500,
 754 0482 0022     		movs	r2, #0	@ tmp502,
 755 0484 42F05C02 		orr	r2, r2, #92	@ tmp504, tmp503,
 756 0488 DA71     		strb	r2, [r3, #7]	@ tmp505, draw_init.x1
 757 048a 0022     		movs	r2, #0	@ tmp507,
 758 048c 1A72     		strb	r2, [r3, #8]	@ tmp508, draw_init.x1
 193:apps/main.c   **** 		draw_init.y1 			= 52;
 759              		.loc 2 193 0 discriminator 1
 760 048e 5E4A     		ldr	r2, .L19	@ tmp509,
 761 0490 9368     		ldr	r3, [r2, #8]	@ tmp510,
 762 0492 3421     		movs	r1, #52	@ tmp511,
 763 0494 61F31723 		bfi	r3, r1, #8, #16	@ tmp510, tmp511,,
 764 0498 9360     		str	r3, [r2, #8]	@ tmp510,
 194:apps/main.c   **** 		draw_init.x2_rx 		= 0;
 765              		.loc 2 194 0 discriminator 1
 766 049a 5B4B     		ldr	r3, .L19	@ tmp512,
 767 049c 0022     		movs	r2, #0	@ tmp514,
 768 049e DA72     		strb	r2, [r3, #11]	@ tmp515, draw_init.x2_rx
 769 04a0 0022     		movs	r2, #0	@ tmp517,
 770 04a2 1A73     		strb	r2, [r3, #12]	@ tmp518, draw_init.x2_rx
 195:apps/main.c   **** 		draw_init.y2_ry 		= 0;
 771              		.loc 2 195 0 discriminator 1
 772 04a4 584A     		ldr	r2, .L19	@ tmp519,
 773 04a6 D368     		ldr	r3, [r2, #12]	@ tmp520,
 774 04a8 6FF31723 		bfc	r3, #8, #16	@ tmp520,,
 775 04ac D360     		str	r3, [r2, #12]	@ tmp520,
 196:apps/main.c   **** 		draw_init.ascii_sym		= 'F';
 776              		.loc 2 196 0 discriminator 1
 777 04ae 564B     		ldr	r3, .L19	@ tmp521,
 778 04b0 4622     		movs	r2, #70	@ tmp522,
 779 04b2 1A71     		strb	r2, [r3, #4]	@ tmp523, draw_init.ascii_sym
 197:apps/main.c   **** 		draw_init.ascii_font	= 1;
 780              		.loc 2 197 0 discriminator 1
 781 04b4 544B     		ldr	r3, .L19	@ tmp524,
 782 04b6 0122     		movs	r2, #1	@ tmp525,
 783 04b8 5A71     		strb	r2, [r3, #5]	@ tmp526, draw_init.ascii_font
 198:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 784              		.loc 2 198 0 discriminator 1
 785 04ba 534B     		ldr	r3, .L19	@ tmp527,
 786 04bc 0022     		movs	r2, #0	@ tmp528,
 787 04be 9A70     		strb	r2, [r3, #2]	@ tmp529, draw_init.function
 199:apps/main.c   **** 		draw_init.type			= 0;
 788              		.loc 2 199 0 discriminator 1
 789 04c0 514B     		ldr	r3, .L19	@ tmp530,
 790 04c2 0022     		movs	r2, #0	@ tmp531,
 791 04c4 DA70     		strb	r2, [r3, #3]	@ tmp532, draw_init.type
 200:apps/main.c   **** 		draw_init.colour 		= 0x0A;
 792              		.loc 2 200 0 discriminator 1
 793 04c6 504B     		ldr	r3, .L19	@ tmp533,
 794 04c8 0A22     		movs	r2, #10	@ tmp534,
 795 04ca 5A70     		strb	r2, [r3, #1]	@ tmp535, draw_init.colour
 201:apps/main.c   **** 		gDrawAAsciiSymbolColour(&draw_init);
 796              		.loc 2 201 0 discriminator 1
 797 04cc 4E48     		ldr	r0, .L19	@,
 798 04ce FFF7FEFF 		bl	gDrawAAsciiSymbolColour	@
 202:apps/main.c   **** 
 203:apps/main.c   **** 
 204:apps/main.c   **** 
 205:apps/main.c   **** #if 1
 206:apps/main.c   **** 		mydelay(20000000);
 799              		.loc 2 206 0 discriminator 1
 800 04d2 4E48     		ldr	r0, .L19+4	@,
 801 04d4 FFF7FEFF 		bl	mydelay	@
 207:apps/main.c   **** 		draw_init.x1 			= 120;
 802              		.loc 2 207 0 discriminator 1
 803 04d8 4B4B     		ldr	r3, .L19	@ tmp536,
 804 04da 0022     		movs	r2, #0	@ tmp538,
 805 04dc 42F07802 		orr	r2, r2, #120	@ tmp540, tmp539,
 806 04e0 DA71     		strb	r2, [r3, #7]	@ tmp541, draw_init.x1
 807 04e2 0022     		movs	r2, #0	@ tmp543,
 808 04e4 1A72     		strb	r2, [r3, #8]	@ tmp544, draw_init.x1
 208:apps/main.c   **** 		draw_init.y1 			= 120;
 809              		.loc 2 208 0 discriminator 1
 810 04e6 484A     		ldr	r2, .L19	@ tmp545,
 811 04e8 9368     		ldr	r3, [r2, #8]	@ tmp546,
 812 04ea 7821     		movs	r1, #120	@ tmp547,
 813 04ec 61F31723 		bfi	r3, r1, #8, #16	@ tmp546, tmp547,,
 814 04f0 9360     		str	r3, [r2, #8]	@ tmp546,
 209:apps/main.c   **** 		draw_init.x2_rx 		= 240;
 815              		.loc 2 209 0 discriminator 1
 816 04f2 454B     		ldr	r3, .L19	@ tmp548,
 817 04f4 0022     		movs	r2, #0	@ tmp550,
 818 04f6 62F00F02 		orn	r2, r2, #15	@ tmp552, tmp551,
 819 04fa DA72     		strb	r2, [r3, #11]	@ tmp553, draw_init.x2_rx
 820 04fc 0022     		movs	r2, #0	@ tmp555,
 821 04fe 1A73     		strb	r2, [r3, #12]	@ tmp556, draw_init.x2_rx
 210:apps/main.c   **** 		draw_init.y2_ry 		= 240;
 822              		.loc 2 210 0 discriminator 1
 823 0500 414A     		ldr	r2, .L19	@ tmp557,
 824 0502 D368     		ldr	r3, [r2, #12]	@ tmp558,
 825 0504 F021     		movs	r1, #240	@ tmp559,
 826 0506 61F31723 		bfi	r3, r1, #8, #16	@ tmp558, tmp559,,
 827 050a D360     		str	r3, [r2, #12]	@ tmp558,
 211:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 828              		.loc 2 211 0 discriminator 1
 829 050c 3E4B     		ldr	r3, .L19	@ tmp560,
 830 050e 0022     		movs	r2, #0	@ tmp561,
 831 0510 9A70     		strb	r2, [r3, #2]	@ tmp562, draw_init.function
 212:apps/main.c   **** 		draw_init.type			= 1;
 832              		.loc 2 212 0 discriminator 1
 833 0512 3D4B     		ldr	r3, .L19	@ tmp563,
 834 0514 0122     		movs	r2, #1	@ tmp564,
 835 0516 DA70     		strb	r2, [r3, #3]	@ tmp565, draw_init.type
 213:apps/main.c   **** 		draw_init.colour 		= 0x05;
 836              		.loc 2 213 0 discriminator 1
 837 0518 3B4B     		ldr	r3, .L19	@ tmp566,
 838 051a 0522     		movs	r2, #5	@ tmp567,
 839 051c 5A70     		strb	r2, [r3, #1]	@ tmp568, draw_init.colour
 214:apps/main.c   **** 		gDrawARectangleColour(&draw_init);
 840              		.loc 2 214 0 discriminator 1
 841 051e 3A48     		ldr	r0, .L19	@,
 842 0520 FFF7FEFF 		bl	gDrawARectangleColour	@
 215:apps/main.c   **** #endif
 216:apps/main.c   **** 		mydelay(20000000);
 843              		.loc 2 216 0 discriminator 1
 844 0524 3948     		ldr	r0, .L19+4	@,
 845 0526 FFF7FEFF 		bl	mydelay	@
 217:apps/main.c   **** 		draw_init.x1 			= 50;
 846              		.loc 2 217 0 discriminator 1
 847 052a 374B     		ldr	r3, .L19	@ tmp569,
 848 052c 0022     		movs	r2, #0	@ tmp571,
 849 052e 42F03202 		orr	r2, r2, #50	@ tmp573, tmp572,
 850 0532 DA71     		strb	r2, [r3, #7]	@ tmp574, draw_init.x1
 851 0534 0022     		movs	r2, #0	@ tmp576,
 852 0536 1A72     		strb	r2, [r3, #8]	@ tmp577, draw_init.x1
 218:apps/main.c   **** 		draw_init.y1 			= 50;
 853              		.loc 2 218 0 discriminator 1
 854 0538 334A     		ldr	r2, .L19	@ tmp578,
 855 053a 9368     		ldr	r3, [r2, #8]	@ tmp579,
 856 053c 3221     		movs	r1, #50	@ tmp580,
 857 053e 61F31723 		bfi	r3, r1, #8, #16	@ tmp579, tmp580,,
 858 0542 9360     		str	r3, [r2, #8]	@ tmp579,
 219:apps/main.c   **** 		draw_init.x2_rx 		= 400;
 859              		.loc 2 219 0 discriminator 1
 860 0544 304B     		ldr	r3, .L19	@ tmp581,
 861 0546 0022     		movs	r2, #0	@ tmp583,
 862 0548 62F06F02 		orn	r2, r2, #111	@ tmp585, tmp584,
 863 054c DA72     		strb	r2, [r3, #11]	@ tmp586, draw_init.x2_rx
 864 054e 0022     		movs	r2, #0	@ tmp588,
 865 0550 42F00102 		orr	r2, r2, #1	@ tmp590, tmp589,
 866 0554 1A73     		strb	r2, [r3, #12]	@ tmp591, draw_init.x2_rx
 220:apps/main.c   **** 		draw_init.y2_ry 		= 200;
 867              		.loc 2 220 0 discriminator 1
 868 0556 2C4A     		ldr	r2, .L19	@ tmp592,
 869 0558 D368     		ldr	r3, [r2, #12]	@ tmp593,
 870 055a C821     		movs	r1, #200	@ tmp594,
 871 055c 61F31723 		bfi	r3, r1, #8, #16	@ tmp593, tmp594,,
 872 0560 D360     		str	r3, [r2, #12]	@ tmp593,
 221:apps/main.c   **** 		gSetADrawFrame(&draw_init);
 873              		.loc 2 221 0 discriminator 1
 874 0562 2948     		ldr	r0, .L19	@,
 875 0564 FFF7FEFF 		bl	gSetADrawFrame	@
 222:apps/main.c   **** 		draw_init.x1 			= 10;
 876              		.loc 2 222 0 discriminator 1
 877 0568 274B     		ldr	r3, .L19	@ tmp595,
 878 056a 0022     		movs	r2, #0	@ tmp597,
 879 056c 42F00A02 		orr	r2, r2, #10	@ tmp599, tmp598,
 880 0570 DA71     		strb	r2, [r3, #7]	@ tmp600, draw_init.x1
 881 0572 0022     		movs	r2, #0	@ tmp602,
 882 0574 1A72     		strb	r2, [r3, #8]	@ tmp603, draw_init.x1
 223:apps/main.c   **** 		draw_init.y1 			= 10;
 883              		.loc 2 223 0 discriminator 1
 884 0576 244A     		ldr	r2, .L19	@ tmp604,
 885 0578 9368     		ldr	r3, [r2, #8]	@ tmp605,
 886 057a 0A21     		movs	r1, #10	@ tmp606,
 887 057c 61F31723 		bfi	r3, r1, #8, #16	@ tmp605, tmp606,,
 888 0580 9360     		str	r3, [r2, #8]	@ tmp605,
 224:apps/main.c   **** 		draw_init.x2_rx 		= 630;
 889              		.loc 2 224 0 discriminator 1
 890 0582 214B     		ldr	r3, .L19	@ tmp607,
 891 0584 0022     		movs	r2, #0	@ tmp609,
 892 0586 42F07602 		orr	r2, r2, #118	@ tmp611, tmp610,
 893 058a DA72     		strb	r2, [r3, #11]	@ tmp612, draw_init.x2_rx
 894 058c 0022     		movs	r2, #0	@ tmp614,
 895 058e 42F00202 		orr	r2, r2, #2	@ tmp616, tmp615,
 896 0592 1A73     		strb	r2, [r3, #12]	@ tmp617, draw_init.x2_rx
 225:apps/main.c   **** 		draw_init.y2_ry 		= 320;
 897              		.loc 2 225 0 discriminator 1
 898 0594 1C4A     		ldr	r2, .L19	@ tmp618,
 899 0596 D368     		ldr	r3, [r2, #12]	@ tmp619,
 900 0598 4FF4A071 		mov	r1, #320	@ tmp620,
 901 059c 61F31723 		bfi	r3, r1, #8, #16	@ tmp619, tmp620,,
 902 05a0 D360     		str	r3, [r2, #12]	@ tmp619,
 226:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 903              		.loc 2 226 0 discriminator 1
 904 05a2 194B     		ldr	r3, .L19	@ tmp621,
 905 05a4 0022     		movs	r2, #0	@ tmp622,
 906 05a6 9A70     		strb	r2, [r3, #2]	@ tmp623, draw_init.function
 227:apps/main.c   **** 		draw_init.colour 		= 0x00;
 907              		.loc 2 227 0 discriminator 1
 908 05a8 174B     		ldr	r3, .L19	@ tmp624,
 909 05aa 0022     		movs	r2, #0	@ tmp625,
 910 05ac 5A70     		strb	r2, [r3, #1]	@ tmp626, draw_init.colour
 228:apps/main.c   **** 		gDrawALineColour(&draw_init);
 911              		.loc 2 228 0 discriminator 1
 912 05ae 1648     		ldr	r0, .L19	@,
 913 05b0 FFF7FEFF 		bl	gDrawALineColour	@
 229:apps/main.c   **** 
 230:apps/main.c   **** 		mydelay(20000000);
 914              		.loc 2 230 0 discriminator 1
 915 05b4 1548     		ldr	r0, .L19+4	@,
 916 05b6 FFF7FEFF 		bl	mydelay	@
 231:apps/main.c   **** 		draw_init.x1 			= 10;
 917              		.loc 2 231 0 discriminator 1
 918 05ba 134B     		ldr	r3, .L19	@ tmp627,
 919 05bc 0022     		movs	r2, #0	@ tmp629,
 920 05be 42F00A02 		orr	r2, r2, #10	@ tmp631, tmp630,
 921 05c2 DA71     		strb	r2, [r3, #7]	@ tmp632, draw_init.x1
 922 05c4 0022     		movs	r2, #0	@ tmp634,
 923 05c6 1A72     		strb	r2, [r3, #8]	@ tmp635, draw_init.x1
 232:apps/main.c   **** 		draw_init.y1 			= 320;
 924              		.loc 2 232 0 discriminator 1
 925 05c8 0F4A     		ldr	r2, .L19	@ tmp636,
 926 05ca 9368     		ldr	r3, [r2, #8]	@ tmp637,
 927 05cc 4FF4A071 		mov	r1, #320	@ tmp638,
 928 05d0 61F31723 		bfi	r3, r1, #8, #16	@ tmp637, tmp638,,
 929 05d4 9360     		str	r3, [r2, #8]	@ tmp637,
 233:apps/main.c   **** 		draw_init.x2_rx 		= 630;
 930              		.loc 2 233 0 discriminator 1
 931 05d6 0C4B     		ldr	r3, .L19	@ tmp639,
 932 05d8 0022     		movs	r2, #0	@ tmp641,
 933 05da 42F07602 		orr	r2, r2, #118	@ tmp643, tmp642,
 934 05de DA72     		strb	r2, [r3, #11]	@ tmp644, draw_init.x2_rx
 935 05e0 0022     		movs	r2, #0	@ tmp646,
 936 05e2 42F00202 		orr	r2, r2, #2	@ tmp648, tmp647,
 937 05e6 1A73     		strb	r2, [r3, #12]	@ tmp649, draw_init.x2_rx
 234:apps/main.c   **** 		draw_init.y2_ry 		= 10;
 938              		.loc 2 234 0 discriminator 1
 939 05e8 074A     		ldr	r2, .L19	@ tmp650,
 940 05ea D368     		ldr	r3, [r2, #12]	@ tmp651,
 941 05ec 0A21     		movs	r1, #10	@ tmp652,
 942 05ee 61F31723 		bfi	r3, r1, #8, #16	@ tmp651, tmp652,,
 943 05f2 D360     		str	r3, [r2, #12]	@ tmp651,
 235:apps/main.c   **** 		draw_init.function 		= F_OVERWRITE;
 944              		.loc 2 235 0 discriminator 1
 945 05f4 044B     		ldr	r3, .L19	@ tmp653,
 946 05f6 0022     		movs	r2, #0	@ tmp654,
 947 05f8 9A70     		strb	r2, [r3, #2]	@ tmp655, draw_init.function
 236:apps/main.c   **** 		draw_init.colour 		= 0x00;
 948              		.loc 2 236 0 discriminator 1
 949 05fa 034B     		ldr	r3, .L19	@ tmp656,
 950 05fc 0022     		movs	r2, #0	@ tmp657,
 951 05fe 5A70     		strb	r2, [r3, #1]	@ tmp658, draw_init.colour
 237:apps/main.c   **** 		gDrawALineColour(&draw_init);
 952              		.loc 2 237 0 discriminator 1
 953 0600 0148     		ldr	r0, .L19	@,
 954 0602 FFF7FEFF 		bl	gDrawALineColour	@
 238:apps/main.c   **** 
 239:apps/main.c   **** 	  /* Select Idle mode entry -------------------------------------------------*/
 240:apps/main.c   **** 	  /* Request Wait For Interrupt	*/
 241:apps/main.c   **** //		Idle();
 242:apps/main.c   **** 	}
 955              		.loc 2 242 0 discriminator 1
 956 0606 61E5     		b	.L15	@
 957              	.L20:
 958              		.align	2
 959              	.L19:
 960 0608 00000000 		.word	draw_init
 961 060c 002D3101 		.word	20000000
 962              		.cfi_endproc
 963              	.LFE117:
 965              	.Letext0:
 966              		.file 3 "d:\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 967              		.file 4 "d:\\armgcc\\arm-none-eabi\\include\\stdint.h"
 968              		.file 5 "SAM4S_StdPeriph_Driver/Include/SAM4S/sam4s8b.h"
 969              		.file 6 "apps/inc/Drawing_apps.h"
 970              		.file 7 "SAM4S_StdPeriph_Driver/Include/SAM4S/system_sam4s.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:58     .text:00000000 $t
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:62     .text:00000000 NVIC_SetPriority
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:109    .text:00000044 $d
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:114    .text:0000004c $t
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:118    .text:0000004c SysTick_Config
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:167    .text:00000088 $d
                            *COM*:0000000f draw_init
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:172    .text:0000008c $t
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:177    .text:0000008c mydelay
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:215    .text:000000a8 main
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:645    .text:000003bc $d
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:652    .text:000003d0 $t
C:\Users\Spas\AppData\Local\Temp\cce0vHPw.s:960    .text:00000608 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.bb49f1eb716983c9014b6db3ebb18dd1
                           .group:00000000 wm4.chip.h.31.ffb1374c8cfd711bf08b18cb482cdecd
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.sam4s8b.h.216.85427310ee57c6602cdb44976ff8eafc
                           .group:00000000 wm4.core_cm4.h.47.facd8ba456d1edc74a9cd34e5ef24231
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.d8e10c63b7db2f2a1586965c37b6affe
                           .group:00000000 wm4.core_cm4.h.178.877dd53394110c198a69aa86aba65870
                           .group:00000000 wm4.acc.h.31.dfd29459e721169d72014eb762f71214
                           .group:00000000 wm4.adc.h.31.c6656640e20d1eafe623af86cb226fca
                           .group:00000000 wm4.chipid.h.31.3af5a36d0a4a9a225c9afb52a1aea0b9
                           .group:00000000 wm4.crccu.h.31.a496852d13935483993734d587fc2f8e
                           .group:00000000 wm4.dacc.h.31.c9217b43fde87abb246765d0ddcb9c5a
                           .group:00000000 wm4.efc.h.31.0bf8e93e6585804f24ede0a4e728599a
                           .group:00000000 wm4.gpbr.h.31.7a5e3dd0c356c6b68d5c512bbdf67f08
                           .group:00000000 wm4.hsmci.h.31.9d224a62fa1ec786508b485b0627d948
                           .group:00000000 wm4.matrix.h.31.c705893f10dd90abec557434f19f4c80
                           .group:00000000 wm4.pdc.h.31.e2d19841c81c9c2bbeeb400b89d315b5
                           .group:00000000 wm4.pio.h.31.8c8983d26a861f040f0f117c14ec06d2
                           .group:00000000 wm4.pmc.h.31.ee762809cf9b67f8c369267b7f38d1b3
                           .group:00000000 wm4.pwm.h.31.da9b7d8dc8ac9c261fdee7e206bdee45
                           .group:00000000 wm4.rstc.h.31.96e972cc48a3044e9dca7f2d844f33fb
                           .group:00000000 wm4.rtc.h.31.f40a4fc6ecffe9e0a8284c655825715f
                           .group:00000000 wm4.rtt.h.31.f70870f04ef5dbcac3269f990b758352
                           .group:00000000 wm4.spi.h.31.f86a4b9d7f4ee32bf9133e4926aa8885
                           .group:00000000 wm4.ssc.h.31.b805b08edc780a096d6650d6ca36d1ca
                           .group:00000000 wm4.supc.h.31.131b9cb8083389b79a4bd5bf451243ef
                           .group:00000000 wm4.tc.h.31.8da8c788d3223db5455d03e5435ef8db
                           .group:00000000 wm4.twi.h.31.22147bf5d3d32053731c632df0e79c3c
                           .group:00000000 wm4.uart.h.31.8e28760a665c54768e00ff4c7a643590
                           .group:00000000 wm4.udp.h.31.edd1ad37d3ebc2c446bab55b82a89df9
                           .group:00000000 wm4.usart.h.31.f84a5833fa97905e15d92372b7a4d3aa
                           .group:00000000 wm4.wdt.h.31.bf9508cda074277d961fffa2c014b7c4
                           .group:00000000 wm4.hsmci.h.31.3557701962362e69e14e53f685fa289c
                           .group:00000000 wm4.ssc.h.31.b3090d071ea322e9320de7b3374b6c7d
                           .group:00000000 wm4.spi.h.31.0c099f04fc71f13866451dd19f165ce5
                           .group:00000000 wm4.tc0.h.31.82f2382972b60e05b032ad12082a9b88
                           .group:00000000 wm4.tc1.h.31.a45ad165f1e4a4be41030d128002f2e1
                           .group:00000000 wm4.twi0.h.31.a2f6579ad734afdd1f8957b7fc33aa94
                           .group:00000000 wm4.twi1.h.31.dcb9c8cbe7f017d537033c87ba5ff61b
                           .group:00000000 wm4.pwm.h.31.2d9663b87a377027ead59c1615e3084b
                           .group:00000000 wm4.usart0.h.31.ec6af36a3993709e003c7713e45e6d44
                           .group:00000000 wm4.usart1.h.31.eafbafd9baa63489c7d4b47b07dd4359
                           .group:00000000 wm4.udp.h.31.72bce9f16287d99e27dc398746c7b41a
                           .group:00000000 wm4.adc.h.31.d1d169655aedc0ac5464b9bc3e038d91
                           .group:00000000 wm4.dacc.h.31.f498d7e9c6281f6aa2a76955bd19179f
                           .group:00000000 wm4.acc.h.31.bd89452c6f6042da160b09b91f7b4ad6
                           .group:00000000 wm4.crccu.h.31.0f8ee11e21f25cd8f0d59ee9bd2d6017
                           .group:00000000 wm4.matrix.h.31.16f7506a18ec96f1a889a659d8f54158
                           .group:00000000 wm4.pmc.h.31.8ee9f69608f942cb1f3f8bedac24c137
                           .group:00000000 wm4.uart0.h.31.107626f9f656553c6d028df3e0c36652
                           .group:00000000 wm4.chipid.h.31.3d621c981fbba4cbcdf919961d16a7e0
                           .group:00000000 wm4.uart1.h.31.8229a0a664aa704025162a106c6f1697
                           .group:00000000 wm4.efc0.h.31.aa56af1c721ea83a50dc1967a8959b7e
                           .group:00000000 wm4.pioa.h.31.577ac2183c73a1a02e92e91a0e37e8fe
                           .group:00000000 wm4.piob.h.31.3d18377ca5f71fef4e536cd97e1dced2
                           .group:00000000 wm4.pioc.h.31.9fd85e02d9919f268f52f61ee7874ed4
                           .group:00000000 wm4.rstc.h.31.d42d559221b78874dbf800ea2429b8d0
                           .group:00000000 wm4.supc.h.31.851dbe7e029de2cc98417e6c6ce74d66
                           .group:00000000 wm4.rtt.h.31.b6f3540f51d07e433e9f2b607b78fa5d
                           .group:00000000 wm4.wdt.h.31.e29a378018b6da05e80df7a7d3fae91a
                           .group:00000000 wm4.rtc.h.31.62bff3fa21e4de3cfaf653749f73ca5b
                           .group:00000000 wm4.gpbr.h.31.a690ec9ac14ca127f47cc304a062f896
                           .group:00000000 wm4.sam4s8b.h.310.cfe4025ce42f19fc6dad5600399e6497
                           .group:00000000 wm4.sam4s8b.h.31.bac0ae8aa6a8295f4ede171816a1bfbd
                           .group:00000000 wm4.sam4s8b.h.455.d99766a935df92fcae5a6292daf0b9af
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.assert.h.11.7fe9eb241be6b0fee772a1e693b81ae3
                           .group:00000000 wm4.acc.h.61.44cfae6040af09278183f92220a11c11
                           .group:00000000 wm4.assert.h.11.7043852a511d37ae606afa012e67e471
                           .group:00000000 wm4.adc.h.62.836e1c74f33a3b2357c489804b9e4164
                           .group:00000000 wm4.async.h.38.b923efd27c82eb8a5a30fb0d9a711171
                           .group:00000000 wm4.dacc.h.61.de15528749b6a5508d4e234e0989531c
                           .group:00000000 wm4.efc.h.51.dca436509f69196baef24b3ff3ad1b51
                           .group:00000000 wm4.flashd.h.38.2c9bfdc532d7034a024627acda3e3c0b
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stddef.h.39.7e3d906ac58942e0b374c527445f5de5
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.56707660962b21991903f1fee7c13bb3
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.64.0f05fa42cfe2db7fc44729a52d3ba948
                           .group:00000000 wm4.hsmci.h.110.610f58f6a31861e37bc09b5b7be09388
                           .group:00000000 wm4.pio.h.68.5d85e14ea6ea0da924da53053bc590d1
                           .group:00000000 wm4.rtc.h.38.8bf78db8651343e80a889203827406a5
                           .group:00000000 wm4.spi.h.38.450641354031b1013c08519149294c78
                           .group:00000000 wm4.spi_pdc.h.38.75857b1dd4449731562322c9709581d8
                           .group:00000000 wm4.twi.h.38.68f2e661eb174ca9ca74eef9740d9a3a
                           .group:00000000 wm4.twid.h.31.9ea8c90af654647ca4d6e3b74e701509
                           .group:00000000 wm4.usart.h.55.88c716ee7c3b6ed0339de6e194786a12
                           .group:00000000 wm4.trace.h.65.364d8fb880402737deb1646f3fc9e1eb
                           .group:00000000 wm4.chip.h.106.a1f123eb25606bfd56ed06360bda02b0
                           .group:00000000 wm4.VGA_Out_apps.h.18.308fcc0316a2d9ff2e1d2e83a41b3959

UNDEFINED SYMBOLS
SystemInit
SystemCoreClockUpdate
LedInit
StartVGAOut
gDrawALineColour
gDrawAEllipseColour
gDrawARectangleColour
gDrawAAsciiSymbolColour
SystemCoreClock
gSetADrawFrame
